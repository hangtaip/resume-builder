{"version":3,"file":"8370.8674f877ff3d227c4eb0.chunk.js","mappings":"sIAkBA,YAlBA,MACE,WAAAA,GACEC,KAAKC,SAAW,IAAIC,GACtB,CAEA,GAAAC,CAAIC,EAAKC,GACPL,KAAKC,SAASE,IAAIC,EAAKC,EACzB,CAEA,GAAAC,CAAIF,GACF,OAAOJ,KAAKC,SAASK,IAAIF,EAC3B,CAEA,KAAAG,GACEP,KAAKC,SAASO,QAAQ,CAACC,EAAGL,IAAQJ,KAAKC,SAASS,OAAON,GACzD,E,6GCRa,MAAMO,UAAsBC,YACxC,WAAAb,GACGc,QACAb,KAAKc,aAAa,CAAEC,KAAM,SAC1Bf,KAAKgB,SACLhB,KAAKiB,WACR,CAEA,iBAAAC,GACGlB,KAAKmB,SACLnB,KAAKoB,UACLpB,KAAKqB,oBACR,CAEA,oBAAAC,GACGtB,KAAKiB,aACR,CAEA,MAAAE,GAsBGnB,KAAKuB,WAAWC,UAAY,IAAUC,SArB1B,ujBAsBf,CAEA,OAAAL,GACG,MAAMM,EAAQ,IAAIC,cAClBD,EAAME,YAAY,UAAOC,YACzB7B,KAAKuB,WAAWO,mBAAqB,CAACJ,EACzC,CAEA,kBAAAL,GACGrB,KAAKgB,SAAW,IAAI,IAAShB,MAC7BA,KAAK+B,UAAY,IAAaA,UAAU,CAAC,eAAgB,eAAgB/B,KAAKgB,SACjF,CAEA,kBAAAgB,CAAmBC,EAAOC,GACTA,aAAqB,IAGjClC,KAAKuB,WAAWY,cAAc,UAAUC,YAEvCC,QAAQC,IAAI,WAElB,CAEA,iBAAAC,CAAkBN,EAAOC,GACRA,aAAqB,IAGhClC,KAAKuB,WAAWY,cAAc,UAAUK,QAExCH,QAAQC,IAAI,WAElB,GAGH,QAAsB,iBAAkB3B,E","sources":["webpack://resume-builder/./src/js/objectRegistry.js","webpack://resume-builder/./src/components/loadingScreen/loadingScreen.js"],"sourcesContent":["class ObjectRegistry {\n  constructor() {\n    this.registry = new Map();\n  }\n\n  set(key, value) {\n    this.registry.set(key, value);\n  }\n\n  get(key) {\n    return this.registry.get(key);\n  }\n\n  clear() {\n    this.registry.forEach((_, key) => this.registry.delete(key));\n  }\n}\n\nexport default new ObjectRegistry();\n","import DOMPurify from \"dompurify\";\nimport Listener from \"../../js/listener.js\";\nimport { registerCustomElement } from \"../../js/registerComponent.js\";\nimport styles from \"./loadingScreen.shadow.scss\";\nimport eventManager from \"../../js/eventManager.js\";\nimport objectRegistry from \"../../js/objectRegistry.js\";\n\nexport default class LoadingScreen extends HTMLElement {\n   constructor() {\n      super();\n      this.attachShadow({ mode: \"open\" });\n      this.listener;\n      this.unsubscribe;\n   }\n\n   connectedCallback() {\n      this.render();\n      this.styling();\n      this.setupEventListener();   \n   }\n\n   disconnectedCallback() {\n      this.unsubscribe();\n   }\n\n   render() {\n      const dom = `\n         <div class=\"container\">\n            <dialog class=\"loading-dlg\">\n               <div class=\"lds-default\">\n                  <div></div>\n                  <div></div>\n                  <div></div>\n                  <div></div>\n                  <div></div>\n                  <div></div>\n                  <div></div>\n                  <div></div>\n                  <div></div>\n                  <div></div>\n                  <div></div>\n                  <div></div>\n               </div>\n            </dialog>\n         </div>\n         `;\n\n      this.shadowRoot.innerHTML = DOMPurify.sanitize(dom);\n   }\n\n   styling() {\n      const sheet = new CSSStyleSheet();\n      sheet.replaceSync(styles.toString());\n      this.shadowRoot.adoptedStyleSheets = [sheet];\n   }\n\n   setupEventListener() {\n      this.listener = new Listener(this);\n      this.subscribe = eventManager.subscribe([\"startLoading\", \"stopLoading\"], this.listener);\n   }\n\n   handleStartLoading(event, delegated) {\n      const isDOM = delegated instanceof Listener;\n\n      if (isDOM) {\n        this.shadowRoot.querySelector(\"dialog\").showModal(); \n      } else {\n         console.log(\"external\");\n      }\n   } \n\n   handleStopLoading(event, delegated) {\n      const isDOM = delegated instanceof Listener;\n\n      if (isDOM) {\n         this.shadowRoot.querySelector(\"dialog\").close();\n      } else {\n         console.log(\"external\");\n      }\n   }\n}\n\nregisterCustomElement(\"loading-screen\", LoadingScreen);\n"],"names":["constructor","this","registry","Map","set","key","value","get","clear","forEach","_","delete","LoadingScreen","HTMLElement","super","attachShadow","mode","listener","unsubscribe","connectedCallback","render","styling","setupEventListener","disconnectedCallback","shadowRoot","innerHTML","sanitize","sheet","CSSStyleSheet","replaceSync","toString","adoptedStyleSheets","subscribe","handleStartLoading","event","delegated","querySelector","showModal","console","log","handleStopLoading","close"],"sourceRoot":""}