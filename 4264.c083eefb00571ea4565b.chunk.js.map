{"version":3,"file":"4264.c083eefb00571ea4565b.chunk.js","mappings":"2IAkBA,YAlBA,MACE,WAAAA,GACEC,KAAKC,SAAW,IAAIC,GACtB,CAEA,GAAAC,CAAIC,EAAKC,GACPL,KAAKC,SAASE,IAAIC,EAAKC,EACzB,CAEA,GAAAC,CAAIF,GACF,OAAOJ,KAAKC,SAASK,IAAIF,EAC3B,CAEA,KAAAG,GACEP,KAAKC,SAASO,QAAQ,CAACC,EAAGL,IAAQJ,KAAKC,SAASS,OAAON,GACzD,E,2GCgQK,MAAMO,EACX,WAAAZ,GACEC,KAAKY,iBAAmB,KACxBZ,KAAKa,mBAAqB,EAC1Bb,KAAKc,iBAAmB,KACxBd,KAAKe,YAAc,KACnBf,KAAKgB,qBAAuB,IAC9B,EAgIF,YApZA,MACE,WAAAjB,GACEC,KAAKiB,kBAAoB,IAAIf,IAC7BF,KAAKkB,yBAA2B,IAAIC,QACpCnB,KAAKoB,sBAAwB,IAAIlB,IACjCF,KAAKqB,eAAiB,IAAInB,IAE1BF,KAAKsB,eAAiB,IAAIC,eAAevB,KAAKwB,eAAeC,KAAKzB,OAClEA,KAAK0B,YAAc,CACjBC,UAAW,yBACXC,QAAS,CAAC,EAId,CAEA,QAAAC,CAASC,EAAWC,GACbD,GAAcC,GAObD,EAAUE,2BAA4B9B,IAC1C+B,QAAQC,MACN,GAAGlC,KAAKD,YAAYoC,mBAAmBL,EAAUM,IAAMN,EAAUO,wEACjEP,IAKC9B,KAAKiB,kBAAkBqB,IAAIR,IAC9B9B,KAAKiB,kBAAkBd,IAAI2B,EAAW,IAAIS,KAG5CvC,KAAKiB,kBAAkBX,IAAIwB,GAAWU,IAAIT,GAC1C/B,KAAKkB,yBAAyBf,IAAI4B,EAASD,GAC3C9B,KAAKsB,eAAemB,QAAQV,GAEvB/B,KAAKoB,sBAAsBkB,IAAIR,IAClC9B,KAAKoB,sBAAsBjB,IAAI2B,EAAW,IAAI5B,MAvB9C+B,QAAQC,MACN,GAAGlC,KAAKD,YAAYoC,sEAwB1B,CAEA,OAAOL,EAAWC,GAChB,MAAMW,EAAsB1C,KAAKiB,kBAAkBX,IAAIwB,GAEnDY,IACFA,EAAoBhC,OAAOqB,GACM,IAA7BW,EAAoBC,MACtB3C,KAAKiB,kBAAkBP,OAAOoB,IAI9B9B,KAAKkB,yBAAyBoB,IAAIP,IACpC/B,KAAKkB,yBAAyBR,OAAOqB,GAGvC/B,KAAKsB,eAAesB,UAAUb,GAE9B,MAAMc,EAAW7C,KAAKoB,sBAAsBd,IAAIwB,GAC5Ce,GACFA,EAASnC,OAAOqB,EAEpB,CAEA,SAAAe,CAAUhB,GACR,MAAMY,EAAsB1C,KAAKiB,kBAAkBX,IAAIwB,GAEnDY,GACF,IAAIA,GAAqBlC,QAASuB,IAChC/B,KAAKU,OAAOoB,EAAWC,KAI3B/B,KAAKoB,sBAAsBV,OAAOoB,GAClC9B,KAAKqB,eAAeX,OAAOoB,EAC7B,CAEAiB,wBAA0B,CAACjB,EAAWkB,KACpC,MAAMC,EAAQnB,EAAUE,gBAAgB1B,IAAI0C,GAExCC,GAAoC,OAA3BA,EAAMnC,mBACjBmC,EAAMnC,iBAAmBoC,sBAAsB,IAC7ClD,KAAKmD,mBAAmBrB,EAAWkB,MAKzCI,uBAAyB,CAACtB,EAAWkB,KACnC,MAAMC,EAAQnB,EAAUE,gBAAgB1B,IAAI0C,GAExCC,GAAoC,OAA3BA,EAAMnC,mBACjBuC,qBAAqBL,EAAOlC,kBAC5BmC,EAAMnC,iBAAmB,OAI7BqC,mBAAqB,CAACrB,EAAWkB,KAC/B,MAAMC,EAAQnB,EAAUE,gBAAgB1B,IAAI0C,GAE5C,IAAKC,EAAO,OAEZ,MAAMK,EAAeN,EAAOO,wBACtBC,EAAeF,EAAaG,MAC5BC,EAAgBJ,EAAaK,OAGhCV,EAAMrC,kBACPgD,KAAKC,MAAML,KAAkBI,KAAKC,MAAMZ,EAAMrC,iBAAiB6C,QAC/DG,KAAKC,MAAMH,KAAmBE,KAAKC,MAAMZ,EAAMrC,iBAAiB+C,QAKhEV,EAAMpC,sBAHNoC,EAAMpC,mBAAqB,EAC3BoC,EAAMrC,iBAAmB,CAAE6C,MAAOD,EAAcG,OAAQD,IAKtDT,EAAMpC,oBAAsB,GAC9Bb,KAAKoD,uBAAuBtB,EAAWkB,GACvCC,EAAMrC,iBAAmB,CAAE6C,MAAOD,EAAcG,OAAQD,GACxDT,EAAMlC,YAAc,KAEpBf,KAAK8D,wBAAwBhC,EAAWkB,EAAQ,CAC9CS,MAAOD,EACPG,OAAQD,KAGVT,EAAMnC,iBAAmBoC,sBAAsB,IAC7ClD,KAAKmD,mBAAmBrB,EAAWkB,KAKzC,uBAAAc,CAAwBhC,EAAWiC,EAAmBC,GACpD,MAAMnB,EAAW7C,KAAKoB,sBAAsBd,IAAIwB,GAEhD,GAAIe,GAAYA,EAASP,IAAIyB,GAAoB,CAC/C,MAAMd,EAAQnB,EAAUE,gBAAgB1B,IAAIyD,GAC5C,GAAId,GAASA,EAAMjC,uBACjBiC,EAAMjC,qBAAqBgD,GAC3Bf,EAAMjC,qBAAuB,KAC7B6B,EAASnC,OAAOqD,GAEM,IAAlBlB,EAASF,MAAY,CACvB,MAAMsB,EAAiBjE,KAAKqB,eAAef,IAAIwB,GAE3CmC,GAA4C,mBAAnBA,IAC3BA,EAAenC,GACf9B,KAAKqB,eAAeX,OAAOoB,GAE/B,CAGJ,CACF,CAEA,cAAAN,CAAe0C,GACb,IAAK,MAAMC,KAASD,EAAS,CAC3B,MAAME,EAAoBpE,KAAKkB,yBAAyBZ,IAAI6D,EAAMnB,QAE9DoB,EACFpE,KAAKqE,mBAAmBD,EAAmBD,GAE3ClC,QAAQqC,KACN,GAAGtE,KAAKD,YAAYoC,0DACpBgC,EAAMnB,OAGZ,CACF,CAEA,kBAAAqB,CAAmBvC,EAAWqC,GAC5B,MAAMI,EAAgBJ,EAAMnB,QACtB,MAAES,EAAK,OAAEE,GAAWQ,EAAMK,YAC1BvB,EAAQnB,EAAUE,gBAAgB1B,IAAIiE,GAE5C,GAAItB,EAAO,CACTA,EAAMlC,YAAc,CAAE0C,QAAOE,UAC7BV,EAAMpC,mBAAqB,EAE3B,MAAMgC,EAAW7C,KAAKoB,sBAAsBd,IAAIwB,GAEhD,IAAI2C,EAAU5B,EAASvC,IAAIiE,GAEtBE,GAA0C,OAA/BxB,EAAMjC,uBACpByD,EAAU,IAAIC,QAASC,IACrB1B,EAAMjC,qBAAuB2D,IAE/B9B,EAAS1C,IAAIoE,EAAeE,IAGzBzE,KAAKqB,eAAeiB,IAAIR,IACJ,IAAI4C,QAASC,IAClC3E,KAAKqB,eAAelB,IAAI2B,EAAW6C,KAIlCC,KAAMC,IACL,MAAMjD,EAAUkD,MAAMC,KACpBF,EAAkB7C,gBAAgBkC,WAEjCc,OAAO,EAAEC,EAAIhC,KAAWA,EAAMrC,kBAC9BsE,IAAI,EAAED,EAAIhC,MAAW,CACpBlB,QAASkD,EACT7C,GAAI6C,EAAG7C,IAAM6C,EAAGE,QAAQC,MAAQH,EAAGlF,YAAYoC,KAC/CsB,MAAOG,KAAKC,MAAwD,KAAjDZ,EAAMrC,iBAAiB6C,MAAQ4B,OAAOC,UAAkB,IAC3E3B,OAAQC,KAAKC,MAAyD,KAAlDZ,EAAMrC,iBAAiB+C,OAAS0B,OAAOC,UAAkB,OAGjFtF,KAAKuF,8BACHV,EACAjD,GAGF5B,KAAKqB,eAAeX,OAAOmE,KAE5BW,MAAOtD,IACND,QAAQC,MACN,GAAGlC,KAAKD,YAAYoC,qDAAqDL,EAAUM,IAAMN,EAAUO,kBACnGH,KAKRlC,KAAK+C,wBAAwBjB,EAAWyC,EAC1C,CACF,CAEA,gBAAAkB,CAAiB3D,EAAW4D,GAC1B,MAAM7C,EAAW7C,KAAKoB,sBAAsBd,IAAIwB,GAChD,IAAKe,GAA8B,IAAlBA,EAASF,KACxB,OAGF,MAAMgD,EAAcb,MAAMC,KAAKlC,EAAS+C,UAExClB,QAAQmB,IAAIF,GACTf,KAAK,KACJ5E,KAAKuF,8BAA8BzD,EAAW4D,GAC9C1F,KAAKoB,sBAAsBV,OAAOoB,KAEnC0D,MAAOtD,IACND,QAAQC,MACN,oDAAoDJ,EAAUM,IAAMN,EAAUO,kBAC9EH,IAGR,CAEA,6BAAAqD,CAA8BzD,EAAWgE,GACvC,MAOMC,EAAc,CAClBC,SAAS,EACTC,UAAU,EACVC,OAVa,CAIbC,mBAAoBL,IAStBM,EAAA,EAAaC,QAAQrG,KAAK0B,YAAYC,UAAWoE,EACnD,G,cCxPa,MAAMO,UAAsBC,YACzC,WAAAxG,GACEyG,QACAxG,KAAKyG,aAAa,CAAEC,KAAM,SAC1B1G,KAAK2G,eAAiB,IAAIjC,QAAQC,IAChC3E,KAAK4G,aAAejC,IAEtB3E,KAAK6G,SACL7G,KAAK8G,gBAAkB,CACrBC,OAAO,EACPC,YAAW,IACF,EAETrF,UAAW,oBACXC,QAAS,IAEX5B,KAAKiH,YACLjH,KAAKkH,cACLlH,KAAKmH,WACLnH,KAAKoH,WACLpH,KAAKqH,YACLrH,KAAKsH,SAAW,CACd,CACEC,KAAM,qBACNlF,QAAS,WACTmF,WAAY,cAEd,CACED,KAAM,qBACNlF,QAAS,eACTmF,WAAY,cAEd,CACED,KAAM,mBACNlF,QAAS,cACTmF,WAAY,cAEd,CACED,KAAM,2BACNlF,QAAS,iBACTmF,WAAY,cAEd,CACED,KAAM,6BACNlF,QAAS,kBACTmF,WAAY,eAIhBxH,KAAKyH,SAAWC,SAASC,cAAc,YACvC3H,KAAK4H,cAAgB,qBACrB5H,KAAKyH,SAASI,UAAY,oIAGJ7H,KAAK4H,qJAGN5H,KAAK4H,kJAGD5H,KAAK4H,uJAGJ5H,KAAK4H,uEAIjC,CAEA,iBAAAE,GACE9H,KAAK+H,iBACL/H,KAAKgI,qBACLhI,KAAKiI,SAASrD,KAAK,QAGnB5E,KAAKkI,UACLlI,KAAKmI,4BACLnI,KAAKoI,gBACP,CAEA,oBAAAC,GACErI,KAAKqH,cACLrH,KAAKsI,2BACP,CAEA,oBAAMP,GACJ,MAAMQ,GAAe,OAAcvI,KAAKsH,UAGxC,aAFM5C,QAAQmB,IAAI0C,GAEX,IAAI7D,QAAQC,GAAWzB,sBAAsB,IAAMyB,KAC5D,CAEA,YAAMsD,GACJjI,KAAKwI,WAAWC,OAAOzI,KAAKyH,SAASiB,QAAQC,WAAU,IAoCvD3I,KAAKiH,YAAcjH,KAAKwI,WAAWI,cAAc,SACjD5I,KAAKkH,cAAgBlH,KAAKwI,WAAWI,cAAc,WACnD5I,KAAKmH,WAAanH,KAAKwI,WAAWI,cAAc,QAChD5I,KAAKoH,WAAapH,KAAKwI,WAAWI,cAAc,cAE1C,IAAIlE,QAAQC,GAAWzB,sBAAsB,IAAMyB,KAC3D,CAEA,OAAAuD,GACE,MAAMW,EAAQ,IAAIC,cAElBD,EAAME,YAAY,UAAOC,YAEzBhJ,KAAKwI,WAAWS,mBAAqB,CAACJ,EACxC,CAEA,kBAAAb,GACEhI,KAAK6G,SAAW,IAAI,IAAS7G,MAC7BA,KAAK6G,SAASqC,aAAalJ,KAC7B,CAEA,yBAAAmI,GACEnI,KAAKqH,YAAcjB,EAAA,EAAa+C,UAC9B,CAAC,iBAAkB,yBAA0B,uBAC7CnJ,KAAK6G,UAEP7G,KAAKgC,gBAAkB,IAAI9B,IAC3BF,KAAKgC,gBAAgB7B,IAAIH,KAAM,IAAIW,GACnCX,KAAKgC,gBAAgB7B,IAAIH,KAAKiH,YAAa,IAAItG,GAC/CX,KAAKgC,gBAAgB7B,IAAIH,KAAKmH,WAAY,IAAIxG,GAE9CyI,EAAsBvH,SAAS7B,KAAMA,MACrCoJ,EAAsBvH,SAAS7B,KAAMA,KAAKiH,aAC1CmC,EAAsBvH,SAAS7B,KAAMA,KAAKmH,WAG5C,CAEA,yBAAAmB,GACEtI,KAAKgC,gBAAgBxB,QAAQ,CAACyC,EAAOlB,KACnCqH,EAAsBhG,uBAAuBpD,KAAM+B,GACnDqH,EAAsB1I,OAAOV,KAAM+B,IAEvC,CAEA,oBAAAsH,CAAqBC,EAAOC,GACZA,aAAqB,IAGjCvJ,KAAKwI,WACFI,cAAc,cACdY,UAAUhH,IAAI,kBAEjBP,QAAQwH,IAAI,WAEhB,CAEA,4BAAAC,CAA6BJ,EAAOC,GAGlC,GAFcA,aAAqB,IAExB,CACT,MAAM3H,EAAU0H,EAAMpD,OAAOC,mBAC7B,IAAIwD,EAAQ,CAAC,EAEb/H,EAAQpB,QAAS0F,IACfyD,EAAMzD,EAAO9D,IAAM8D,IAInByD,EAAM3J,KAAKD,YAAYoC,MAAMsB,OAC7BkG,EAAM3J,KAAKmH,WAAWhC,QAAQC,MAAM3B,MAEpCzD,KAAKmH,WAAWqC,UAAUhH,IAAI,aAE9BxC,KAAKmH,WAAWqC,UAAUI,OAAO,aAGnCD,EAAM3J,KAAKD,YAAYoC,MAAMsB,OAC7BkG,EAAM3J,KAAKiH,YAAY9B,QAAQC,MAAM3B,MACjCzD,KAAKiH,YAAYuC,UAAUhH,IAAI,aAC/BxC,KAAKiH,YAAYuC,UAAUI,OAAO,aAEtC5J,KAAK8G,gBAAgBC,OAAQ,EAC7B/G,KAAK8G,gBAAgBE,YAAc,IAAe,EAClDhH,KAAK8G,gBAAgBnF,UAAY,iBACjC3B,KAAK8G,gBAAgBlF,QAAU,CAAC,EAChC5B,KAAK6J,mBAAmB7J,KAAK8G,iBAC7B9G,KAAK4G,cACP,MACE3E,QAAQwH,IAAI,WAEhB,CAEA,yBAAAK,CAA0BR,EAAOC,GACjBA,aAAqB,IAG7BQ,OAAOnE,OAAO0D,EAAMpD,OAAO8D,KAAKC,MAAMC,QAAQC,OAAS,GACzDnK,KAAKwI,WAAWI,cAAc,cAAcY,UAAUhH,IAAI,iBAG5DP,QAAQwH,IAAI,WAEhB,CAEA,wBAAMI,CAAmBG,GACvB,IACMA,EAAKjD,aACDiD,EAAKhD,cAGb,MAAMjB,EAAc,CAClBC,SAAS,EACTC,UAAU,EACVC,OAAQ8D,EAAKpI,SAGfwE,EAAA,EAAaC,QAAQ2D,EAAKrI,UAAWoE,EACvC,CAAE,MAAOqE,GACPnI,QAAQC,MAAM,qBAAqB8H,EAAKrI,eAAeyI,IACzD,CACF,CAEA,oBAAMhC,GACJ,MAOMiC,EAPgB,CACpBrK,KAAKwI,WAAWI,cAAc,gBAC9B5I,KAAKwI,WAAWI,cAAc,eAC9B5I,KAAKwI,WAAWI,cAAc,mBAC9B5I,KAAKwI,WAAWI,cAAc,qBAGS5D,OAAOsF,GAAQA,GAAuC,iBAAxBA,EAAK3D,gBAExE0D,EAAmBF,OAAS,QACxBzF,QAAQmB,IAAIwE,EAAmBnF,IAAIoF,GAAQA,EAAK3D,uBAEhD,IAAIjC,QAAQC,GAAWzB,sBAAsB,IAAMA,sBAAsByB,KAGjF,MAAM4F,EAAc7C,SAAS8C,MAAQ9C,SAAS8C,MAAMC,MAAQ/F,QAAQC,gBAC9DD,QAAQmB,IAAI,CAAC0E,IAEnBvK,KAAK8G,gBAAgBC,OAAQ,EAC7B/G,KAAK8G,gBAAgBE,YAAc,IAAe,EAClDhH,KAAK8G,gBAAgBnF,UAAY,iBACjC3B,KAAK8G,gBAAgBlF,QAAU,CAAC,EAChC5B,KAAK6J,mBAAmB7J,KAAK8G,iBAC7B9G,KAAK4G,cACP,GAIF,QAAsB,iBAAkBN,E","sources":["webpack://resume-builder/./src/js/objectRegistry.js","webpack://resume-builder/./src/js/resizeObserverManager.js","webpack://resume-builder/./src/pages/home/resume_default/resume_default.js"],"sourcesContent":["class ObjectRegistry {\n  constructor() {\n    this.registry = new Map();\n  }\n\n  set(key, value) {\n    this.registry.set(key, value);\n  }\n\n  get(key) {\n    return this.registry.get(key);\n  }\n\n  clear() {\n    this.registry.forEach((_, key) => this.registry.delete(key));\n  }\n}\n\nexport default new ObjectRegistry();\n","import eventManager from \"./eventManager\";\n\nclass ResizeObserverManager {\n  constructor() {\n    this.observedContainer = new Map();\n    this.observedContainerInverse = new WeakMap();\n    this.stabilizationPromises = new Map();\n    this.activePromises = new Map();\n\n    this.resizeObserver = new ResizeObserver(this._handleEntries.bind(this));\n    this.eventConfig = {\n      eventName: \"resizeObserverComplete\",\n      details: {},\n    };\n\n    // console.log(\"ResizeObserverManager: Initialized singleton.\");\n  }\n\n  register(component, element) {\n    if (!component || !element) {\n      console.error(\n        `${this.constructor.name}: Both component and element must be provided for registration.`,\n      );\n      return;\n    }\n\n    if ((!component._observedStates) instanceof Map) {\n      console.error(\n        `${this.constructor.name}: Component ${component.id || component.tagName} does not implement the required properties (_observedStates).`,\n        component,\n      );\n      return;\n    }\n\n    if (!this.observedContainer.has(component)) {\n      this.observedContainer.set(component, new Set());\n    }\n\n    this.observedContainer.get(component).add(element);\n    this.observedContainerInverse.set(element, component);\n    this.resizeObserver.observe(element);\n\n    if (!this.stabilizationPromises.has(component)) {\n      this.stabilizationPromises.set(component, new Map());\n    }\n  }\n\n  delete(component, element) {\n    const observedElementsSet = this.observedContainer.get(component);\n\n    if (observedElementsSet) {\n      observedElementsSet.delete(element);\n      if (observedElementsSet.size === 0) {\n        this.observedContainer.delete(component);\n      }\n    }\n\n    if (this.observedContainerInverse.has(element)) {\n      this.observedContainerInverse.delete(element);\n    }\n\n    this.resizeObserver.unobserve(element);\n\n    const promises = this.stabilizationPromises.get(component);\n    if (promises) {\n      promises.delete(element); \n    }\n  }\n\n  deleteAll(component) {\n    const observedElementsSet = this.observedContainer.get(component);\n\n    if (observedElementsSet) {\n      [...observedElementsSet].forEach((element) => {\n        this.delete(component, element);\n      });\n    }\n\n    this.stabilizationPromises.delete(component);\n    this.activePromises.delete(component);\n  }\n\n  startStabilizationCheck = (component, target) => {\n    const state = component._observedStates.get(target);\n\n    if (state && state.animationFrameId === null) {\n      state.animationFrameId = requestAnimationFrame(() =>\n        this.checkSizeStability(component, target),\n      );\n    }\n  };\n\n  stopStabilizationCheck = (component, target) => {\n    const state = component._observedStates.get(target);\n\n    if (state && state.animationFrameId !== null) {\n      cancelAnimationFrame(target.animationFrameId);\n      state.animationFrameId = null;\n    }\n  };\n\n  checkSizeStability = (component, target) => {\n    const state = component._observedStates.get(target);\n\n    if (!state) return;\n\n    const currentReact = target.getBoundingClientRect();\n    const currentWidth = currentReact.width;\n    const currentHeight = currentReact.height;\n\n    if (\n      !state.lastObservedSize ||\n      Math.round(currentWidth) !== Math.round(state.lastObservedSize.width) ||\n      Math.round(currentHeight) !== Math.round(state.lastObservedSize.height)\n    ) {\n      state.sameSizeFrameCount = 0;\n      state.lastObservedSize = { width: currentWidth, height: currentHeight };\n    } else {\n      state.sameSizeFrameCount++;\n    }\n\n    if (state.sameSizeFrameCount >= 5) {\n      this.stopStabilizationCheck(component, target);\n      state.lastObservedSize = { width: currentWidth, height: currentHeight };\n      state.pendingSize = null;\n\n      this.notifyElementStabilized(component, target, {\n        width: currentWidth,\n        height: currentHeight,\n      });\n    } else {\n      state.animationFrameId = requestAnimationFrame(() =>\n        this.checkSizeStability(component, target),\n      );\n    }\n  };\n\n  notifyElementStabilized(component, stabilizedElement, finalSize) {\n    const promises = this.stabilizationPromises.get(component);\n\n    if (promises && promises.has(stabilizedElement)) {\n      const state = component._observedStates.get(stabilizedElement);\n      if (state && state.resolveStabilization) {\n        state.resolveStabilization(finalSize);\n        state.resolveStabilization = null;\n        promises.delete(stabilizedElement);\n\n        if (promises.size === 0) {\n          const overallResolve = this.activePromises.get(component);\n\n          if (overallResolve && typeof overallResolve === \"function\") {\n            overallResolve(component);\n            this.activePromises.delete(component);\n          }\n        }\n        // this._checkAndPublish(component, finalSize);\n      }\n    }\n  }\n\n  _handleEntries(entries) {\n    for (const entry of entries) {\n      const componentInstance = this.observedContainerInverse.get(entry.target);\n\n      if (componentInstance) {\n        this._initStabilization(componentInstance, entry);\n      } else {\n        console.warn(\n          `${this.constructor.name}: No component instance found for observed element:`,\n          entry.target,\n        );\n      }\n    }\n  }\n\n  _initStabilization(component, entry) {\n    const targetElement = entry.target;\n    const { width, height } = entry.contentRect;\n    const state = component._observedStates.get(targetElement);\n\n    if (state) {\n      state.pendingSize = { width, height };\n      state.sameSizeFrameCount = 0; \n\n      const promises = this.stabilizationPromises.get(component);\n\n      let promise = promises.get(targetElement);\n\n      if (!promise || state.resolveStabilization === null) {\n        promise = new Promise((resolve) => {\n          state.resolveStabilization = resolve;\n        });\n        promises.set(targetElement, promise);\n      }\n\n      if (!this.activePromises.has(component)) {\n        const overallPromise = new Promise((resolve) => {\n          this.activePromises.set(component, resolve);\n        });\n\n        overallPromise\n          .then((resolvedComponent) => {\n            const details = Array.from(\n              resolvedComponent._observedStates.entries(),\n            )\n              .filter(([el, state]) => state.lastObservedSize)\n              .map(([el, state]) => ({\n                element: el,\n                id: el.id || el.dataset.attr || el.constructor.name,\n                width: Math.round((state.lastObservedSize.width + Number.EPSILON) * 100) / 100,\n                height: Math.round((state.lastObservedSize.height + Number.EPSILON) * 100) / 100,\n              }));\n\n            this._publishStabilizationComplete(\n              resolvedComponent,\n              details,\n            );\n\n            this.activePromises.delete(resolvedComponent);\n          })\n          .catch((error) => {\n            console.error(\n              `${this.constructor.name}: Overall component stabilization promise for ${component.id || component.tagName} failed:`,\n              error,\n            );\n          });\n      }\n\n      this.startStabilizationCheck(component, targetElement);\n    }\n  }\n\n  _checkAndPublish(component, lastStableSize) {\n    const promises = this.stabilizationPromises.get(component);\n    if (!promises || promises.size === 0) {\n      return;\n    }\n\n    const promisesArr = Array.from(promises.values());\n\n    Promise.all(promisesArr)\n      .then(() => {\n        this._publishStabilizationComplete(component, lastStableSize);\n        this.stabilizationPromises.delete(component);\n      })\n      .catch((error) => {\n        console.error(\n          `ResizeObserverManager: Promise.all for component ${component.id || component.tagName} failed:`,\n          error,\n        );\n      });\n  }\n\n  _publishStabilizationComplete(component, stabilizedDetails) {\n    const detail = {\n      // componentId: component.id || component.tagName,\n      // target: component,\n      // finalSize: finalSize,\n      stabilizedElements: stabilizedDetails,\n    };\n\n    const eventDetail = {\n      bubbles: true,\n      composed: true,\n      detail: detail,\n    };\n\n    eventManager.publish(this.eventConfig.eventName, eventDetail);\n  }\n}\n\nexport class StabilizationState {\n  constructor() {\n    this.lastObservedSize = null;\n    this.sameSizeFrameCount = 0;\n    this.animationFrameId = null;\n    this.pendingSize = null;\n    this.resolveStabilization = null;\n  }\n}\n\n// const observedElementToComponentMap = new WeakMap();\n//\n// const globalCustomEventData = {\n//   await: false,\n//   awaitDetail() {\n//     return 0;\n//   },\n//   eventName: \"resizeObserverComplete\",\n//   details: \"\",\n// }\n//\n// const globalPublishCustomEvent = async (data) => {\n//   try {\n//     if (data.await) {\n//       await data.awaitDetail();\n//     }\n//\n//     const eventDetail = {\n//       bubbles: true,\n//       composed: true,\n//       detail: data.details,\n//     };\n//\n//     eventManager.publish(data.eventName, eventDetail);\n//   } catch (err) {\n//     console.error(`Failed to publish ${data.eventName}:`, err);\n//   }\n// }\n//\n// export const registerResizeObservation = (component, element) => {\n//   observedElementToComponentMap.set(element, component);\n//   resizeObserver.observe(element);\n// };\n//\n// export const  = (element) => {\n//   if (observedElementToComponentMap.has(element)) {\n//     resizeObserver.unobserve(element);\n//     observedElementToComponentMap.delete(element);\n//   }\n// };\n//\n// const resizeObserver = new ResizeObserver((entries) => {\n//   for (const entry of entries) {\n//     const componentInstance = observedElementToComponentMap.get(entry.target);\n//\n//     if (componentInstance) {\n//       _handleObservedResize(componentInstance, entry);\n//     } else {\n//       console.warn(\n//         `ResizeObserver: No component instance or handler found for observed element:`,\n//         entry.target,\n//       );\n//     }\n//     // const { width, height } = entry.contentRect;\n//     // entry.target._pendingSize = { width, height };\n//     // entry.target._sameSizeFrameCount = 0;\n//\n//     // startStabilizationCheck(entry.target._resizeTargets);\n//   }\n// });\n//\n// const _handleObservedResize = (component, entry) => {\n//   const targetElement = entry.target;\n//   const { width, height } = entry.contentRect;\n//   const state = component._observedStates.get(targetElement);\n//\n//   if (state) {\n//     state.pendigSize = { width, height };\n//     state.sameSizeFrameCount = 0;\n//     startStabilizationCheck(component, targetElement);\n//   }\n// };\n//\n// const startStabilizationCheck = (component, target) => {\n//   const state = component._observedStates.get(target);\n//\n//   if (state && state.animationFrameId === null) {\n//     state.animationFrameId = requestAnimationFrame(() =>\n//       checkSizeStability(component, target),\n//     );\n//   }\n// };\n//\n// export const stopStabilizationCheck = (component, target) => {\n//   const state = component._observedStates.get(target);\n//\n//   if (state && state.animationFrameId !== null) {\n//     cancelAnimationFrame(target.animationFrameId);\n//     state.animationFrameId = null;\n//   }\n// };\n//\n// const checkSizeStability = (component, target) => {\n//   const state = component._observedStates.get(target);\n//\n//   if (!state) return;\n//\n//   const currentReact = target.getBoundingClientRect();\n//   const currentWidth = currentReact.width;\n//   const currentHeight = currentReact.height;\n//\n//   if (\n//     !state.lastObservedSize ||\n//     Math.round(currentWidth) !== Math.round(state.lastObservedSize.width) ||\n//     Math.round(currentHeight) !== Math.round(state.lastObservedSize.height)\n//   ) {\n//     state.sameSizeFrameCount = 0;\n//     state.lastObservedSize = { width: currentWidth, height: currentHeight };\n//   } else {\n//     state.sameSizeFrameCount++;\n//   }\n//\n//   if (state.sameSizeFrameCount >= 5) {\n//     console.log(target);\n//     console.log(currentWidth);\n//     stopStabilizationCheck(component, target);\n//     state._lastObservedSize = { width: currentWidth, height: currentHeight };\n//     state._pendingSize = null;\n//   } else {\n//     state._animationFrameId = requestAnimationFrame(() =>\n//       checkSizeStability(component, target),\n//     );\n//   }\n// };\n\nexport default new ResizeObserverManager();\n","import DOMPurify from \"dompurify\";\nimport Listener from \"../../../js/listener.js\";\nimport {\n  getRegisteredCustomElements,\n  registerCustomElement,\n} from \"../../../js/registerComponent.js\";\n// import resizeObserverManager, {\n//   resizeObserver,\n//   registerResizeObservation,\n//   deleteResizeObservation,\n//   stopStabilizationCheck,\n//   StabilizationState} from \"../../../js/resizeObserverManager.js\";\nimport styles from \"./resume_default.shadow.scss\";\nimport eventManager from \"../../../js/eventManager.js\";\nimport objectRegistry from \"../../../js/objectRegistry.js\";\nimport resizeObserverManager, {\n  StabilizationState,\n} from \"../../../js/resizeObserverManager.js\";\nimport { loadComponent } from \"../../../js/helper.js\";\n\nexport default class ResumeDefault extends HTMLElement {\n  constructor() {\n    super();\n    this.attachShadow({ mode: \"open\" });\n    this.isReadyPromise = new Promise(resolve => {\n      this.resolveReady = resolve;\n    });\n    this.listener;\n    this.customEventData = {\n      await: false,\n      awaitDetail() {\n        return 0;\n      },\n      eventName: \"handleCustomEvent\",\n      details: \"\",\n    };\n    this.infoElement;\n    this.skillsElement;\n    this.eduElement;\n    this.expElement;\n    this.unsubscribe;\n    this.compList = [\n      {\n        path: \"userPic/userPic.js\",\n        tagName: \"user-pic\",\n        folderType: \"components\",\n      },\n      {\n        path: \"details/details.js\",\n        tagName: \"user-details\",\n        folderType: \"components\",\n      },\n      {\n        path: \"skills/skills.js\",\n        tagName: \"user-skills\",\n        folderType: \"components\",\n      },\n      {\n        path: \"educations/educations.js\",\n        tagName: \"user-education\",\n        folderType: \"components\",\n      },\n      {\n        path: \"experiences/experiences.js\",\n        tagName: \"user-experience\",\n        folderType: \"components\",\n      },\n    ];\n\n    this.template = document.createElement(\"template\");\n    this.styleToImport = \"data-style=default\";\n    this.template.innerHTML = `\n      <div class=\"container\">\n        <div class=\"info\" data-attr=\"info\" data-elem-type=\"component\">\n          <user-details ${this.styleToImport}></user-details>\n        </div>\n        <div class=\"skills\" data-attr=\"skills\" data-elem-type=\"component\">\n          <user-skills ${this.styleToImport}></user-skills>\n        </div>\n        <div class=\"edu\" data-attr=\"edu\" data-elem-type=\"component\">\n          <user-educations ${this.styleToImport}></user-educations>\n        </div>\n        <div class=\"exp\" data-attr=\"exp\" data-elem-type=\"component\">\n          <user-experiences ${this.styleToImport}></user-experiences>\n        </div>\n      </div>\n    `;\n  }\n\n  connectedCallback() {\n    this.loadComponents();\n    this.setupEventListener();\n    this.render().then(() => {\n      // this.resolveReady();\n    });\n    this.styling();\n    this.setupGenericEventListener();\n    this.componentReady();\n  }\n\n  disconnectedCallback() {\n    this.unsubscribe();\n    this.abortGenericEventListener();\n  }\n\n  async loadComponents() {\n    const compPromises = loadComponent(this.compList);\n    await Promise.all(compPromises);\n\n    return new Promise(resolve => requestAnimationFrame(() => resolve()));\n  }\n\n  async render() {\n    this.shadowRoot.append(this.template.content.cloneNode(true));\n    // const styleToImport = \"data-style=default\";\n    // const dom = `\n    //   <div class=\"container\">\n    //     <div class=\"info\" data-attr=\"info\" data-elem-type=\"component\">\n    //       <user-details ${styleToImport}></user-details>\n    //     </div>\n    //     <div class=\"skills\" data-attr=\"skills\" data-elem-type=\"component\">\n    //       <user-skills ${styleToImport}></user-skills>\n    //     </div>\n    //     <div class=\"edu\" data-attr=\"edu\" data-elem-type=\"component\">\n    //       <user-educations ${styleToImport}></user-educations>\n    //     </div>\n    //     <div class=\"exp\" data-attr=\"exp\" data-elem-type=\"component\">\n    //       <user-experiences ${styleToImport}></user-experiences>\n    //     </div>\n    //   </div>\n    // `;\n\n    // const registeredComponents = getRegisteredCustomElements();\n\n    // DOMPurify.addHook(\"uponSanitizeElement\", (_, data) => {\n    //   if (registeredComponents.includes(data.tagName) !== -1) {\n    //     data.allowedTags[data.tagName] = true;\n    //   }\n    // });\n    \n    // const componentCnt = (dom.match(new RegExp('data-elem-type=[\"component\"]', \"g\")) || []).length;\n    //\n    // const componentCnt = this.template.content.querySelectorAll('[data-elem-type=\"component\"]').length;\n    // let state = new Map();\n    // state.set(\"componentCnt\", componentCnt);\n    // state.set(\"readyCnt\", 0);\n    // objectRegistry.set(\"resumeComponentLoaded\", state);\n\n    // this.shadowRoot.innerHTML = DOMPurify.sanitize(dom);\n    this.infoElement = this.shadowRoot.querySelector(\".info\");\n    this.skillsElement = this.shadowRoot.querySelector(\".skills\");\n    this.eduElement = this.shadowRoot.querySelector(\".edu\");\n    this.expElement = this.shadowRoot.querySelector(\".exp\");\n    // await new Promise(resolve => requestAnimationFrame(() => resolve()));\n    await new Promise(resolve => requestAnimationFrame(() => resolve()));\n  }\n\n  styling() {\n    const sheet = new CSSStyleSheet();\n    //const cssModule = import('./details.shadow.scss');\n    sheet.replaceSync(styles.toString());\n    // styles.use({ target: this.shadowRoot });\n    this.shadowRoot.adoptedStyleSheets = [sheet];\n  }\n\n  setupEventListener() {\n    this.listener = new Listener(this);\n    this.listener.setDelegates(this); \n  }\n\n  setupGenericEventListener() { \n    this.unsubscribe = eventManager.subscribe(\n      [\"updateEduStyle\", \"resizeObserverComplete\", \"completeFormRequest\"],\n      this.listener,\n    );\n    this._observedStates = new Map();\n    this._observedStates.set(this, new StabilizationState());\n    this._observedStates.set(this.infoElement, new StabilizationState());\n    this._observedStates.set(this.eduElement, new StabilizationState());\n\n    resizeObserverManager.register(this, this);\n    resizeObserverManager.register(this, this.infoElement);\n    resizeObserverManager.register(this, this.eduElement);\n    // registerResizeObservation(this, this);\n    // registerResizeObservation(this, this.eduElement);\n  }\n\n  abortGenericEventListener() {\n    this._observedStates.forEach((state, element) => {\n      resizeObserverManager.stopStabilizationCheck(this, element);\n      resizeObserverManager.delete(this, element);\n    });\n  }\n\n  handleUpdateEduStyle(event, delegated) {\n    const isDOM = delegated instanceof Listener;\n\n    if (isDOM) {\n      this.shadowRoot\n        .querySelector(\".container\")\n        .classList.add(\"edu-multi-line\");\n    } else {\n      console.log(\"external\");\n    }\n  }\n\n  handleResizeObserverComplete(event, delegated) {\n    const isDOM = delegated instanceof Listener;\n\n    if (isDOM) {\n      const details = event.detail.stabilizedElements;\n      let sizes = {};\n\n      details.forEach((detail) => {\n        sizes[detail.id] = detail;\n      });\n\n      if (\n        sizes[this.constructor.name].width ==\n        sizes[this.eduElement.dataset.attr].width\n      ) {\n        this.eduElement.classList.add(\"fullWidth\");\n      } else {\n        this.eduElement.classList.remove(\"fullWidth\");\n      }\n\n      sizes[this.constructor.name].width ==\n      sizes[this.infoElement.dataset.attr].width\n        ? this.infoElement.classList.add(\"fullWidth\")\n        : this.infoElement.classList.remove(\"fullWidth\");\n\n      this.customEventData.await = false;\n      this.customEventData.awaitDetail = () => { return 0; };\n      this.customEventData.eventName = \"previewVisible\";\n      this.customEventData.details = {}\n      this.publishCustomEvent(this.customEventData);\n      this.resolveReady();\n    } else {\n      console.log(\"external\");\n    }\n  }\n\n  handleCompleteFormRequest(event, delegated) {\n    const isDOM = delegated instanceof Listener;\n\n    if (isDOM) {\n      if (Object.values(event.detail.data.owner.skills).length > 9) {\n        this.shadowRoot.querySelector(\".container\").classList.add(\"all-fullWidth\"); \n      }\n    } else {\n      console.log(\"external\");\n    }\n  } \n\n  async publishCustomEvent(data) {\n    try {\n      if (data.await) {\n        await data.awaitDetail();\n      }\n\n      const eventDetail = {\n        bubbles: true,\n        composed: true,\n        detail: data.details,\n      };\n\n      eventManager.publish(data.eventName, eventDetail);\n    } catch (err) {\n      console.error(`Failed to publish ${data.eventName} : ${err}`);\n    }\n  }\n\n  async componentReady() {\n    const subComponents = [\n      this.shadowRoot.querySelector(\"user-details\"),\n      this.shadowRoot.querySelector(\"user-skills\"),\n      this.shadowRoot.querySelector(\"user-educations\"),\n      this.shadowRoot.querySelector(\"user-experiences\"),\n    ];\n\n    const validSubComponents = subComponents.filter(comp => comp && typeof comp.isReadyPromise === \"object\");\n\n    if (validSubComponents.length > 0) {\n      await Promise.all(validSubComponents.map(comp => comp.isReadyPromise));\n    } else {\n      await new Promise(resolve => requestAnimationFrame(() => requestAnimationFrame(resolve)));\n    }\n\n    const fontPromise = document.fonts ? document.fonts.ready : Promise.resolve();\n    await Promise.all([fontPromise]);\n\n    this.customEventData.await = false;\n    this.customEventData.awaitDetail = () => { return 0; };\n    this.customEventData.eventName = \"resumeRendered\";\n    this.customEventData.details = {}\n    this.publishCustomEvent(this.customEventData);\n    this.resolveReady();\n  }\n}\n\n//customElements.define('resume-home', Home);\nregisterCustomElement(\"resume-default\", ResumeDefault);\n"],"names":["constructor","this","registry","Map","set","key","value","get","clear","forEach","_","delete","StabilizationState","lastObservedSize","sameSizeFrameCount","animationFrameId","pendingSize","resolveStabilization","observedContainer","observedContainerInverse","WeakMap","stabilizationPromises","activePromises","resizeObserver","ResizeObserver","_handleEntries","bind","eventConfig","eventName","details","register","component","element","_observedStates","console","error","name","id","tagName","has","Set","add","observe","observedElementsSet","size","unobserve","promises","deleteAll","startStabilizationCheck","target","state","requestAnimationFrame","checkSizeStability","stopStabilizationCheck","cancelAnimationFrame","currentReact","getBoundingClientRect","currentWidth","width","currentHeight","height","Math","round","notifyElementStabilized","stabilizedElement","finalSize","overallResolve","entries","entry","componentInstance","_initStabilization","warn","targetElement","contentRect","promise","Promise","resolve","then","resolvedComponent","Array","from","filter","el","map","dataset","attr","Number","EPSILON","_publishStabilizationComplete","catch","_checkAndPublish","lastStableSize","promisesArr","values","all","stabilizedDetails","eventDetail","bubbles","composed","detail","stabilizedElements","eventManager","publish","ResumeDefault","HTMLElement","super","attachShadow","mode","isReadyPromise","resolveReady","listener","customEventData","await","awaitDetail","infoElement","skillsElement","eduElement","expElement","unsubscribe","compList","path","folderType","template","document","createElement","styleToImport","innerHTML","connectedCallback","loadComponents","setupEventListener","render","styling","setupGenericEventListener","componentReady","disconnectedCallback","abortGenericEventListener","compPromises","shadowRoot","append","content","cloneNode","querySelector","sheet","CSSStyleSheet","replaceSync","toString","adoptedStyleSheets","setDelegates","subscribe","resizeObserverManager","handleUpdateEduStyle","event","delegated","classList","log","handleResizeObserverComplete","sizes","remove","publishCustomEvent","handleCompleteFormRequest","Object","data","owner","skills","length","err","validSubComponents","comp","fontPromise","fonts","ready"],"sourceRoot":""}