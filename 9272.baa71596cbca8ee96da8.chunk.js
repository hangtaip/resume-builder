"use strict";(self.webpackChunkresume_builder=self.webpackChunkresume_builder||[]).push([[5886,9272],{3340:(t,e,a)=>{a.d(e,{A:()=>n});const n=new class{constructor(){this.registry=new Map}set(t,e){this.registry.set(t,e)}get(t){return this.registry.get(t)}clear(){this.registry.forEach((t,e)=>this.registry.delete(e))}}},5886:(t,e,a)=>{a.r(e),a.d(e,{default:()=>n});const n='*,*::before,*::after{box-sizing:border-box;scrollbar-width:thin}button{background:#fff;color:hsl(0,0%,-4999999.999999999%);border-radius:.25rem;padding:.5rem;padding-inline:.5rem;border-width:0;transition:color .3s ease-out}button:hover{cursor:pointer;background:#d3d3d3;color:hsl(0,0%,-3274509.803921567%);border-radius:0;transition:.3s ease-in}input:not([type=text]){cursor:pointer}.icon{height:.7rem;width:.7rem}button:has(.icon){display:flex;border-width:0;border-radius:.5rem;padding:0}legend{font-size:2ch;font-weight:bold}.hidden{display:none}.container{height:auto;width:auto;background-color:rgba(0,0,0,0);font-family:"Georgia","serif";font-size:1.6ch;word-spacing:.8ch;flex-flow:row wrap}.container fieldset{display:flex;flex-flow:row wrap;border:none}.container button{padding:.25rem;margin-left:auto}.container button.delete-btn{height:10px;display:inline-flex;align-items:center;border:none;padding:0;margin-top:5px;margin-left:auto}.container custom-textarea{flex:1 100%;transition:all .1s linear}.container :has(>.container.list:nth-of-type(2)) .container.list:not(:last-child){padding-bottom:.5rem;border-bottom:1px solid hsl(240,50%,80%)}.container :has(>.container.list:nth-of-type(2))>.container.list>.delete-btn:hover{color:hsl(211,12%,66%);background-color:hsl(211,88%,34%)}.container :has(>.container.list:nth-of-type(2))>.container.list>.delete-btn:active{transform:scale(0.9);filter:drop-shadow(4px 4px 4px hsl(270, 50%, 40%));transition:all .1s ease-in}.container .container{flex:1 100%;display:flex;flex-flow:row nowrap;align-items:flex-start;gap:.25rem}.container .container .form-group{display:flex;flex-flow:row wrap;flex:1;gap:.25rem}.container .container .form-group-item{display:flex;flex-flow:row wrap;align-items:center;flex:1}.container .container .form-group-item:has(>.desc){flex:1 100%}.container .container fieldset{padding:0;margin:0}.container .container fieldset.duration{width:100%}.container .container fieldset.duration label{font-size:1.4ch}.container .container fieldset.duration .form-group-item{flex-flow:row nowrap}.container .container fieldset.desc{width:100%;display:flex;flex-flow:row wrap;gap:.5rem;flex:1}.container .container fieldset.desc:has(>custom-textarea:nth-of-type(2)) custom-textarea:not(:last-child){padding-bottom:.5rem;border-bottom:1px dashed hsl(300,86%,85%)}.container .container fieldset.desc:has(>custom-textarea:nth-of-type(2)) .delete-btn:hover{color:hsl(211,12%,66%);background-color:hsl(211,88%,34%)}.container .container fieldset.desc:has(>custom-textarea:nth-of-type(2)) .delete-btn:active{transform:scale(0.9);filter:drop-shadow(4px 4px 4px hsl(270, 50%, 40%));transition:all .1s ease-in}.container .container legend{font-weight:normal;font-size:1.6ch}.container .container label{min-width:2rem;flex:1}.container .container input{flex:3 100%;padding:.25rem;border:1px solid hsl(240,54%,94%);border-radius:.25rem}.container .container .removing{height:0;overflow:hidden;padding:0;margin:0}.container .container .fa-xMark{height:20px;width:20px}.container .view{display:flex;flex-flow:row wrap;gap:.5rem;flex:1}@media screen and (max-width: 800px){.container .container .form-group-item:has(>.duration){flex:1 100%}}'},9272:(t,e,a)=>{a.r(e),a.d(e,{default:()=>h});var n=a(8404),o=a(2616),s=a(6854),i=a(5886),r=a(5910),l=a(2980),d=a(4727),c=a(3340);class h extends HTMLElement{static observedAttributes=["data-values"];constructor(){super(),this.attachShadow({mode:"open"}),this.listener,this.customEventData={await:!1,awaitDetail:()=>0,eventName:"handleCustomEvent",details:""},this.unsubscribe,this.dataValues,r.Yv.add(l.AEl)}render(){const t=`\n     <div class="container">\n        <fieldset>\n           <legend>Experiences</legend>\n           <div class="view">\n              <button class="clickable add-btn" type="button" title="Add experience">Add</button>\n              ${this.customInput()} \n           </div>\n        </fieldset>\n     </div>\n     `;this.shadowRoot.innerHTML=n.A.sanitize(t)}styling(){const t=new CSSStyleSheet;t.replaceSync(i.default.toString()),this.shadowRoot.adoptedStyleSheets=[t]}setupEventListener(){this.listener=new o.A(this),this.listener.setDelegates(this),this.listener.setDelegates(this.shadowRoot.querySelector(".add-btn")),this.shadowRoot.addEventListener("click",this.listener),this.shadowRoot.addEventListener("transitionend",this.listener),this.unsubscribe=d.A.subscribe("importDataLoaded",this.listener)}handleClick(t,e){if(e instanceof o.A){let e=t.target.closest(".clickable");if(!e)return;if(!this.shadowRoot.contains(e))return;switch(!0){case e.classList.contains("add-btn"):const t=this.customInput(),a=(new DOMParser).parseFromString(n.A.sanitize(t),"text/html").body.querySelector("div.container");this.shadowRoot.querySelector("fieldset .view").append(a),this.setValueRequestDetail(),this.publishCustomEvent(this.customEventData);break;case e.classList.contains("add-desc-btn"):const o=this.customInputDescription(),s=(new DOMParser).parseFromString(n.A.sanitize(o),"text/html").body.querySelector("custom-textarea");this.shadowRoot.querySelector("fieldset.desc").append(s);break;case e.classList.contains("delete-btn"):e.closest("fieldset.desc")?e.closest("fieldset.desc").querySelectorAll("custom-textarea").length>1&&e.closest("custom-textarea").classList.add("removing"):this.shadowRoot.querySelectorAll(".container.list").length>1&&e.closest(".container.list").classList.add("removing")}}else console.log("external")}handleTransitionend(t,e){if(e instanceof o.A){let e=t.target.closest(".transitionable");if(!e)return;if(!this.shadowRoot.contains(e))return;switch(!0){case e.matches(".container.list.removing"):e.remove(),this.setValueRequestDetail(),this.publishCustomEvent(this.customEventData);break;case e.matches("custom-textarea.removing"):e.remove()}}else console.log("external")}handleImportDataLoaded(t,e){if(e instanceof o.A){let e=this.shadowRoot.querySelector(".view");if(!e)return;if(!this.shadowRoot.contains(e))return;let a="";const n=this.shadowRoot.querySelectorAll(".container.list");Object.values(t.detail.data.owner.exp).forEach((t,e)=>{if(n[e])return Object.keys(t).map(e=>{this.shadowRoot.querySelector(`input[data-attr="${e}"]`)&&(this.shadowRoot.querySelector(`input[data-attr="${e}"`).value=t[e]),"desc"==e&&(this.shadowRoot.querySelector("custom-textarea").dataset.values=JSON.stringify(t[e]))});a+=this.customInput(t)});const o=(new DOMParser).parseFromString(a,"text/html"),s=new DocumentFragment;for(;o.body.firstChild;)s.append(o.body.firstChild);this.shadowRoot.querySelector(".view").append(s),this.importComplete(),this.setValueRequestDetail(),this.publishCustomEvent(this.customEventData)}else console.log("external")}importComplete(){if(c.A.registry.has("formLoaded")){const t=c.A.get("formLoaded").get("readyCnt")+1,e=c.A.get("formLoaded").get("formCnt");c.A.get("formLoaded").set("readyCnt",t),t==e&&(this.customEventData.await=!1,this.customEventData.awaitDetail=()=>0,this.customEventData.eventName="stopLoading",this.customEventData.details={},this.publishCustomEvent(this.customEventData))}else console.warn(`${this.constructor.name}: Please set default state for formLoaded before dispatch importDataLoaded event.`)}testDataInsert(){let t="";const e=this.shadowRoot.querySelectorAll(".container.list");Object.values(yaml.owner.exp).forEach((a,n)=>{if(e[n])return Object.keys(a).map(t=>{this.shadowRoot.querySelector(`input[data-attr="${t}"]`)&&(this.shadowRoot.querySelector(`input[data-attr="${t}"`).value=a[t]),"desc"==t&&(this.shadowRoot.querySelector("custom-textarea").dataset.values=JSON.stringify(a[t]))});t+=this.customInput(a)});const a=(new DOMParser).parseFromString(t,"text/html"),n=new DocumentFragment;for(;a.body.firstChild;)n.append(a.body.firstChild);this.shadowRoot.querySelector(".view").append(n)}customInput(t=""){const e=(0,r.Kk)(l.AEl,{classes:["fa-xMark","icon"]});return` \n     <div class="container list transitionable">\n        <div class="form-group">\n          <div class="form-group-item">\n            <label for="hf_exp_org">Organisation</label>\n            <input type="text" title="organisation" placeholder="ABC Restaurant" id="hf_exp_org" data-width="20" data-attr="org" \n            ${t.org&&t.org.length>0?`value="${t.org}"`:""}\n          >\n          </div>\n          <div class="form-group-item">\n            <label for="hf_exp_pos">Position</label>\n            <input type="text" title="position" placeholder="Waiter" id="hf_exp_pos" data-width="20" data-attr="pos" \n            ${t.pos&&t.pos.length>0?`value="${t.pos}"`:""}\n            >\n          </div>\n          <div class="form-group-item">\n            <fieldset class="duration">\n              <legend>Duration</legend>\n                <div class="form-group">\n                  <div class="form-group-item">\n                    <label for="hf_exp_tl_from">From</label>\n                    <input type="month" title="duration" placeholder="01/2024" id="hf_exp_tl" data-width="10" data-attr="tl_from" \n                    ${t.tl_from&&t.tl_from.length>0?`value="${t.tl_from}"`:""}\n                  >\n                  </div>\n                  <div class="form-group-item">\n                    <label for="hf_exp_tl">To</label>\n                    <input type="month" title="duration" placeholder="12/2024" id="hf_exp_tl" data-width="10" data-attr="tl_to" \n                    ${t.tl_to&&t.tl_to.length>0?`value="${t.tl_to}"`:""}\n                    >\n                </div>\n              </div>\n            </fieldset>\n          </div>\n          <div class="form-group-item">\n            <fieldset class="desc">\n              <legend>Description</legend>\n              ${this.customInputDescription(t.desc)} \n            </fieldset>\n          </div>\n        </div>\n        <button class="clickable delete-btn" type="button" title="Remove experiecnce">${e.node[0].outerHTML}</button>\n     </div>\n    `}customInputDescription(t=""){return(0,r.Kk)(l.AEl,{classes:["fa-xMark","icon"]}),`\n      <custom-textarea\n        title="description"\n        ${Object.entries(t).length>1?`data-values='${JSON.stringify(t).replace(/'/g,"&#39;")}'`:""}\n        class="transitionable"\n        data-title='["description"]'\n        data-attr='["desc"]'\n        data-placeholder='["Learn table etiquette"]'\n        data-id='["hf_exp_desc"]'\n      >\n      </custom-textarea>\n    `}setValueRequestDetail(){this.customEventData.await=!1,this.customEventData.eventName="valueRequest",this.customEventData.details={[this.tagName.toLowerCase()]:this.shadowRoot.querySelectorAll(".container.list > .form-group")}}async publishCustomEvent(t){try{t.await&&await t.awaitDetail();const e={bubbles:!0,composed:!0,detail:t.details};d.A.publish(t.eventName,e)}catch(e){console.error(`Failed to publish ${t.eventName} : ${e}`)}}connectedCallback(){this.render(),this.setValueRequestDetail(),this.publishCustomEvent(this.customEventData),this.styling(),this.setupEventListener()}disconnectedCallback(){this.unsubscribe()}attributeChangedCallback(t,e,a){if("data-values"===t){const t=JSON.parse(a||"{}");let e;Object.entries(t).forEach(t=>{if(e=this.shadowRoot.querySelector(`input[data-attr="${t[0]}"]`),e)switch(e.type){case"text":e.value=t[1];break;case"color":const a=`#${t[1].toString().replace(/^#/,"")}`;e.value=a}})}}}(0,s.Dp)("form-experience",h)}}]);
//# sourceMappingURL=9272.baa71596cbca8ee96da8.chunk.js.map