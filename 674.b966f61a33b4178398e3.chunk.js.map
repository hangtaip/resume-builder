{"version":3,"file":"674.b966f61a33b4178398e3.chunk.js","mappings":"qOASe,MAAMA,UAAiBC,YACpC,WAAAC,GACEC,QACAC,KAAKC,aAAa,CAAEC,KAAM,SAC1BF,KAAKG,QAAQC,cAAe,EAC5BJ,KAAKK,SACLL,KAAKM,gBAAkB,CACrBC,OAAO,EACPC,YAAW,IACF,EAETC,UAAW,oBACXC,QAAS,IAEX,KAAQC,IAAI,MACd,CAEA,MAAAC,GACE,MAIMC,EAAM,uGAJF,QAAK,MAAS,CACtBC,QAAS,CAAC,cAMPC,KAAK,GAAGC,iDAKbhB,KAAKiB,WAAWC,UAAY,IAAUC,SAASN,EACjD,CAEA,OAAAO,GACE,MAAMC,EAAQ,IAAIC,cAClBD,EAAME,YAAY,UAAOC,YACzBxB,KAAKiB,WAAWQ,mBAAqB,CAACJ,EACxC,CAEA,kBAAAK,GACE1B,KAAKK,SAAW,IAAI,IAASL,MAC7BA,KAAKiB,WAAWU,iBAAiB,QAAS3B,KAAKK,SACjD,CAEA,WAAAuB,CAAYC,EAAOC,GAGjB,GAFcA,aAAqB,IAExB,CACT,MAAMC,EAAOF,EAAMG,OAAOC,QAAQ,cAElC,IAAKF,EAAM,OACX,IAAK/B,KAAKiB,WAAWiB,SAASH,GAAO,OAErC/B,KAAKM,gBAAgBC,OAAQ,EAC7BP,KAAKM,gBAAgBE,YAAc,IACjC,EAEFR,KAAKM,gBAAgBG,UAAY,cACjCT,KAAKM,gBAAgBI,QAAU,CAAE,GAAK,IACtCV,KAAKmC,mBAAmBnC,KAAKM,gBAC/B,MACE8B,QAAQC,IAAI,WAEhB,CAEA,wBAAMF,CAAmBG,GACvB,IACMA,EAAK/B,aACD+B,EAAK9B,cAGb,MAAM+B,EAAc,CAClBC,SAAS,EACTC,UAAU,EACVC,OAAQJ,EAAK5B,SAGf,IAAaiC,QAAQL,EAAK7B,UAAW8B,EACvC,CAAE,MAAOK,GACPR,QAAQS,MAAM,qBAAqBP,EAAK7B,eAAemC,IACzD,CACF,CAEA,KAAAE,GAEc9C,KAAK+C,QAAQC,SAASC,qBAAqB,eAAe,GAExE,CAEA,OAAAF,CAAQG,GACN,MACMC,GADS,IAAI,KACCC,UAAUF,GAC9Bd,QAAQC,IAAIc,EACd,CAEA,iBAAAE,GACErD,KAAKY,SACLZ,KAAKoB,UACLpB,KAAK0B,oBACP,GAGF,QAAsB,YAAa9B,E,48BC/GpB,MAAM0D,EACnB,WAAAxD,GACEE,KAAKuD,SAAWP,SAASQ,yBACzBxD,KAAKyD,QAAU,IAAIC,IACnB1D,KAAK2D,SACL3D,KAAKqB,MAAQ,IAAIC,cACjBtB,KAAK4D,IAAM,GACX5D,KAAK6D,SAAW,CAAC,EACjB7D,KAAK8D,SACP,CAEA,SAAAV,CAAUrC,GAMR,OALAf,KAAK2D,SAAWX,SAASe,cAAc,YACvC/D,KAAKgE,SAASjD,GACdf,KAAKiE,YAAYlD,GACjBf,KAAKkE,aAEElE,KAAK2D,SAASQ,OACvB,CAEA,QAAAH,CAASjD,EAAMqD,EAAQ,GACjBrD,EAAKE,YACaF,EAAKE,WAAWQ,mBACxB4C,QAAQhD,IAClB,MAAMiD,EAAQ,IAAIjD,EAAMkD,UAAUC,IAAIC,GAC7BzE,KAAK0E,mBAAmBD,EAAKE,QAAS5D,EAAK6D,QAAQC,gBACzDC,KAAK,MACR9E,KAAK4D,IAAImB,KAAKT,KAGhBvD,EAAKE,WAAW+D,WAAWX,QAASY,IAClC,IAAIlE,EAAKZ,SAASC,eAAgB6E,EAAM9E,SAASC,cAG3B,GAAlB6E,EAAMC,SAMR,GAAmC,SAA/BD,EAAML,QAAQC,cAA0B,CAC1C,MAAMM,EAAapE,EAAKE,WAAWmE,YAEnCpF,KAAKyD,QAAQ4B,IAAI,GAAGtE,EAAK6D,QAAQC,sBAAuBM,GAExDnF,KAAKsF,SAASvE,EAAK6D,QAAQC,cAAeM,EAAYf,EACxD,MAAYpE,KAAKyD,QAAQ8B,IAAIxE,EAAK6D,QAAQC,gBACxC7E,KAAKyD,QAAQ4B,IAAItE,EAAK6D,QAAQC,cAAeI,KAKnDjF,KAAKgE,SAASjD,EAAKE,WAAYmD,EAAQ,IAEnCrD,EAAKiE,WAAWQ,QAClBzE,EAAKiE,WAAWX,QAASY,IACvBjF,KAAKgE,SAASiB,EAAOb,EAAQ,IAIrC,CAEA,WAAAH,CAAYlD,GACNA,EAAKE,YACPF,EAAKE,WAAW+D,WAAWX,QAASY,IAClC,IAAIlE,EAAKZ,SAASC,eAAgB6E,EAAM9E,SAASC,cAG3B,GAAlB6E,EAAMC,SACR,GAAmC,SAA/BD,EAAML,QAAQC,cAA0B,CAC1C,MAAMY,EAAQ1E,EAAK6D,QAAQC,cACrBa,EAAU1F,KAAKyD,QAAQ8B,IAAIE,GAE3BE,GAAQ,IAAIC,WAAYC,gBAC5B9E,EAAKC,UACL,aACA8E,KAAKC,WAEH/F,KAAK2D,SAASQ,QAAQ6B,cAAcP,IACtCzF,KAAK2D,SAASQ,QACX6B,cAAcP,GACdQ,YAAYN,EAAMvC,WAAU,IAC/BpD,KAAK2D,SAASQ,QACX6B,cAAcP,GACdS,OAAOR,EAAQtC,WAAU,MAE5BpD,KAAK2D,SAASQ,QAAQ+B,OAAOP,EAAMvC,WAAU,IAC7CpD,KAAK2D,SAASQ,QACX6B,cAAcP,GACdS,OAAOR,EAAQtC,WAAU,IAEhC,MAAYpD,KAAKyD,QAAQ8B,IAAIxE,EAAK6D,QAAQC,iBAK9C7E,KAAKiE,YAAYlD,EAAKE,aAElBF,EAAKiE,WAAWQ,QAClBzE,EAAKiE,WAAWX,QAASY,IAGvBjF,KAAKiE,YAAYgB,IAIzB,CAGA,UAAAkB,CAAWpF,EAAMqF,EAAKC,GA2EpB,OA1EItF,EAAKE,YACPF,EAAKE,WAAW+D,WAAWX,QAASY,IAClC,GAAsB,GAAlBA,EAAMC,UAC2B,SAA/BD,EAAML,QAAQC,cAChB,OAAQuB,GACN,IAAK,OACCnB,EAAMqB,aAAaD,KACrBrG,KAAK8D,UAAYmB,GAEnB,MACF,IAAK,QACCA,EAAMsB,UAAUrE,SAASmE,KAC3BrG,KAAK8D,UAAYmB,GAEnB,MACF,IAAK,UACCA,EAAM9E,QAAQkG,KAChBrG,KAAK8D,UAAYmB,GAEnB,MACF,IAAK,KACCA,EAAMuB,IAAMH,IACdrG,KAAK8D,UAAYmB,GAEnB,MACF,IAAK,UACCA,EAAML,QAAQC,eAAiBwB,EAAMxB,gBACvC7E,KAAK8D,UAAYmB,MAQ7BjF,KAAKmG,WAAWpF,EAAKE,WAAYmF,EAAKC,IAElCtF,EAAKiE,WAAWQ,QAClBzE,EAAKiE,WAAWX,QAASY,IACvB,GAAsB,GAAlBA,EAAMC,SAAe,CACvB,OAAQkB,GACN,IAAK,OACCnB,EAAMqB,aAAaD,KACrBrG,KAAK8D,UAAYmB,GAEnB,MACF,IAAK,QACCA,EAAMsB,UAAUrE,SAASmE,KAC3BrG,KAAK8D,UAAYmB,GAEnB,MACF,IAAK,UACCA,EAAM9E,QAAQkG,KAChBrG,KAAK8D,UAAYmB,GAEnB,MACF,IAAK,KACCA,EAAMuB,IAAMH,IACdrG,KAAK8D,UAAYmB,GAEnB,MACF,IAAK,UACCA,EAAML,QAAQC,eAAiBwB,EAAMxB,gBACvC7E,KAAK8D,UAAYmB,GAKtBjF,KAAKmG,WAAWlB,EAAOmB,EAAKC,EAC/B,IAKCrG,KAAK8D,SACd,CAEA,QAAAwB,CAASV,EAAS6B,EAAOrC,GACvB,MAAMsC,EAAS,GAAG9B,KAAWR,KAASuC,OAAOC,aAAaC,UAAU,EAAG,KAEjEC,EAAS,IAAIL,GAChBjC,IAAKW,GACG,IAAIA,EAAWZ,UAAUC,IAAKC,GAC5B,IAAIiC,KAAUjC,EAAKE,YAG7BoC,OAAOC,SACPlC,KAAK,MAER9E,KAAK4D,IAAImB,KAAK+B,EAOhB,CAMA,gBAAM5C,GACJ,MAMM+C,EAAW,GANDjH,KAAK4D,IAAIkB,KAAK,UACboC,OAAOC,KAAKnH,KAAK6D,UACbW,IAAI4C,GACI,GAAGA,OAAepH,KAAK6D,SAASuD,QAExCtC,KAAK,cAEpB9E,KAAKqB,MAAMgG,QAAQJ,GACzBjH,KAAK2D,SAASQ,QAAQ1C,mBAAqB,CAACzB,KAAKqB,MACnD,CAEA,kBAAAqD,CAAmBC,EAAS2C,GAC1B,MAAMC,EAAa5C,EAAQ6C,OAE3B,GAAID,EAAWE,WAAW,UAAW,CACnC,MAAMC,EAAa,oCACbC,EAAQJ,EAAWI,MAAMD,GAE/B,IAAKC,EACH,MAAO,GAGT,MAAO,CAAEC,EAAgBC,GAAaF,GAE/BG,EAAeC,GAAaF,EAAUL,OAAOQ,MAAM,WAepDC,EAAoB,GAbAH,EACvBE,MAAM,WACNxD,IAAI0D,IACD,MAAMC,EAAkBD,EAASV,OAEjC,OAAIW,EAAgBV,WAAW,cACtB,GAAGH,OAAqBa,IAExB,GAAGb,KAAmBa,MAGlCrD,KAAK,WAE4CiD,MAKpD,OAHA/H,KAAK6D,SAAS+D,IAAmB5H,KAAK6D,SAAS+D,IAAmB,IAAM,IAAIK,IAGrE,EACT,CAEA,GAAIV,EAAWE,WAAW,SAAU,CAClC,MAAMW,EAAUb,EAAWS,MAAM,SAAS,GAC1C,MAAO,GAAGV,KAAmBc,GAC/B,CAEA,MAAON,EAAeC,GAAapD,EAAQqD,MAAM,WAYjD,MAAO,GAVWF,EAAcE,MAAM,WACnCxD,IAAI0D,GACCA,EAASV,OAAOC,WAAW,cACtB,GAAGH,OAAqBY,IAExB,GAAGZ,KAAmBY,KAGhCpD,KAAK,WAEiBiD,GAC3B,E","sources":["webpack://resume-builder/./src/components/printBtn/printBtn.js","webpack://resume-builder/./src/js/shadowParser.js"],"sourcesContent":["import DOMPurify from \"dompurify\";\nimport Listener from \"../../js/listener.js\";\nimport { registerCustomElement } from \"../../js/registerComponent.js\";\nimport ShadowParser from \"../../js/shadowParser.js\";\nimport styles from \"./printBtn.shadow.scss\";\nimport { icon, library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faPrint } from \"@fortawesome/free-solid-svg-icons\";\nimport eventManager from \"../../js/eventManager.js\";\n\nexport default class PrintBtn extends HTMLElement {\n  constructor() {\n    super();\n    this.attachShadow({ mode: \"open\" });\n    this.dataset.printDisable = true;\n    this.listener;\n    this.customEventData = {\n      await: false,\n      awaitDetail() {\n        return 0;\n      },\n      eventName: \"handleCustomEvent\",\n      details: \"\",\n    };\n    library.add(faPrint);\n  }\n\n  render() {\n    const i = icon(faPrint, {\n      classes: [\"fa-print\"],\n    });\n\n    const dom = `\n      <div class=\"container\">\n\t  <button type=\"button\" title=\"Print\" class=\"clickable\">\n\t    ${i.node[0].outerHTML}\n\t  </button>\n      </div>\n      `;\n\n    this.shadowRoot.innerHTML = DOMPurify.sanitize(dom);\n  }\n\n  styling() {\n    const sheet = new CSSStyleSheet();\n    sheet.replaceSync(styles.toString());\n    this.shadowRoot.adoptedStyleSheets = [sheet];\n  }\n\n  setupEventListener() {\n    this.listener = new Listener(this);\n    this.shadowRoot.addEventListener(\"click\", this.listener);\n  }\n\n  handleClick(event, delegated) {\n    const isDOM = delegated instanceof Listener;\n\n    if (isDOM) {\n      const elem = event.target.closest(\".clickable\");\n\n      if (!elem) return;\n      if (!this.shadowRoot.contains(elem)) return;\n\n      this.customEventData.await = false;\n      this.customEventData.awaitDetail = () => {\n\treturn 0;\n      };\n      this.customEventData.eventName = \"printResume\";\n      this.customEventData.details = { \"\" : \"\" };\n      this.publishCustomEvent(this.customEventData);\n    } else {\n      console.log(\"external\");\n    }\n  }\n\n  async publishCustomEvent(data) {\n    try {\n      if (data.await) {\n        await data.awaitDetail();\n      }\n\n      const eventDetail = {\n        bubbles: true,\n        composed: true,\n        detail: data.details,\n      };\n\n      eventManager.publish(data.eventName, eventDetail);\n    } catch (err) {\n      console.error(`Failed to publish ${data.eventName} : ${err}`);\n    }\n  }\n\n  print() {\n    // window.print();\n    const src = this.getHTML(document.getElementsByTagName(\"resume-home\")[0]);\n    // const element = document.getElementsByTagName(\"resume-home\")[0];\n  }\n\n  getHTML(src) {\n    const parser = new ShadowParser();\n    const html = parser.cloneNode(src);\n    console.log(html);\n  }\n\n  connectedCallback() {\n    this.render();\n    this.styling();\n    this.setupEventListener();\n  }\n}\n\nregisterCustomElement(\"print-btn\", PrintBtn);\n","export default class ShadowParser {\n  constructor() {\n    this.fragment = document.createDocumentFragment();\n    this.nodeMap = new Map();\n    this.template;\n    this.sheet = new CSSStyleSheet();\n    this.css = [];\n    this.mediaCss = {}; \n    this.foundNode;\n  }\n\n  cloneNode(node) {\n    this.template = document.createElement(\"template\");\n    this.walkNode(node);\n    this.arrangeNode(node);\n    this.applySheet();\n\n    return this.template.content;\n  }\n\n  walkNode(node, depth = 0) {\n    if (node.shadowRoot) {\n      const styleSheets = node.shadowRoot.adoptedStyleSheets;\n      styleSheets.forEach(sheet => {\n        const rules = [...sheet.cssRules].map(rule => {\n          return this.prependToSelectors(rule.cssText, node.tagName.toLowerCase());\n        }).join(\"\\n\");\n        this.css.push(rules);\n        // console.log(rules);\n      });\n      node.shadowRoot.childNodes.forEach((child) => {\n        if (node.dataset?.printDisable || child.dataset?.printDisable) {\n          return;\n        }\n        if (child.nodeType == 1) {\n          // const shell = new DOMParser().parseFromString(\n          //   node.outerHTML,\n          //   \"text/html\",\n          // ).body.firstChild;\n\n          if (child.tagName.toLowerCase() == \"style\") {\n            const styleSheet = node.shadowRoot.styleSheets;\n            // for <style> usage\n            this.nodeMap.set(`${node.tagName.toLowerCase()}-style`, styleSheet);\n            // for CSSStyleSheet usage - current\n            this.addSheet(node.tagName.toLowerCase(), styleSheet, depth);\n          } else if (!this.nodeMap.get(node.tagName.toLowerCase())) {\n            this.nodeMap.set(node.tagName.toLowerCase(), child);\n          }\n        }\n      });\n\n      this.walkNode(node.shadowRoot, depth + 1);\n    } else {\n      if (node.childNodes.length) {\n        node.childNodes.forEach((child) => {\n          this.walkNode(child, depth + 1);\n        });\n      }\n    }\n  }\n\n  arrangeNode(node) {\n    if (node.shadowRoot) {\n      node.shadowRoot.childNodes.forEach((child) => {\n        if (node.dataset?.printDisable || child.dataset?.printDisable) {\n          return;\n        }\n        if (child.nodeType == 1) {\n          if (child.tagName.toLowerCase() != \"style\") {\n            const elTag = node.tagName.toLowerCase();\n            const newNode = this.nodeMap.get(elTag);\n            // TODO: can be replaced with simple div -> move the nodeId here, add to our element, then pass to addSheet\n            const shell = new DOMParser().parseFromString(\n              node.outerHTML,\n              \"text/html\",\n            ).body.firstChild;\n\n            if (this.template.content.querySelector(elTag)) {\n              this.template.content\n                .querySelector(elTag)\n                .replaceWith(shell.cloneNode(true));\n              this.template.content\n                .querySelector(elTag)\n                .append(newNode.cloneNode(true));\n            } else {\n              this.template.content.append(shell.cloneNode(true));\n              this.template.content\n                .querySelector(elTag)\n                .append(newNode.cloneNode(true));\n            }\n          } else if (!this.nodeMap.get(node.tagName.toLowerCase())) {\n          }\n        }\n      });\n\n      this.arrangeNode(node.shadowRoot);\n    } else {\n      if (node.childNodes.length) {\n        node.childNodes.forEach((child) => {\n          // console.log('lightDom');\n          // console.log(child);\n          this.arrangeNode(child);\n        });\n      }\n    }\n  }\n\n  // TODO: use regex for (.#[])\n  searchNode(node, key, value) {\n    if (node.shadowRoot) {\n      node.shadowRoot.childNodes.forEach((child) => {\n        if (child.nodeType == 1) {\n          if (child.tagName.toLowerCase() != \"style\") {\n            switch (key) {\n              case \"attr\" || \"attribute\":\n                if (child.hasAttribute(value)) {\n                  this.foundNode = child;\n                }\n                break;\n              case \"class\":\n                if (child.classList.contains(value)) {\n                  this.foundNode = child;\n                }\n                break;\n              case \"dataset\":\n                if (child.dataset[value]) {\n                  this.foundNode = child;\n                }\n                break;\n              case \"id\":\n                if (child.id == value) {\n                  this.foundNode = child;\n                }\n                break;\n              case \"tagName\":\n                if (child.tagName.toLowerCase() == value.toLowerCase()) {\n                  this.foundNode = child;\n                }\n                break;\n            }\n          }\n        }\n      });\n\n      this.searchNode(node.shadowRoot, key, value);\n    } else {\n      if (node.childNodes.length) {\n        node.childNodes.forEach((child) => {\n          if (child.nodeType == 1) {\n            switch (key) {\n              case \"attr\" || \"attribute\":\n                if (child.hasAttribute(value)) {\n                  this.foundNode = child;\n                }\n                break;\n              case \"class\":\n                if (child.classList.contains(value)) {\n                  this.foundNode = child;\n                }\n                break;\n              case \"dataset\":\n                if (child.dataset[value]) {\n                  this.foundNode = child;\n                }\n                break;\n              case \"id\":\n                if (child.id == value) {\n                  this.foundNode = child;\n                }\n                break;\n              case \"tagName\":\n                if (child.tagName.toLowerCase() == value.toLowerCase()) {\n                  this.foundNode = child;\n                }\n                break;\n            }\n\n             this.searchNode(child, key, value);\n          }\n        });\n      }\n    }\n\n    return this.foundNode;\n  }\n\n  addSheet(tagName, style, depth) {\n    const nodeId = `${tagName}-${depth}-${crypto.randomUUID().substring(0, 8)}`;\n\n    const allCSS = [...style]\n      .map((styleSheet) => {\n        return [...styleSheet.cssRules].map((rule) => {\n          return `.${nodeId} ${rule.cssText}`;\n        });\n      })\n      .filter(Boolean)\n      .join(\"\\n\");\n\n    this.css.push(allCSS);\n    // const allCSS = [...style[0].cssRules].map((rule) => {\n    //     const newRule = `.${nodeId} ${rule.cssText}`;\n    //     return newRule;\n    //   })\n    //   .filter(Boolean)\n    //   .join('\\n');\n  }\n\n  // because we use CSSStyleSheet for our components and we reuse the tag, existing style will still apply\n  // TODO: for different design, we have to either:\n  // 1. use simple div -> attach nodeID -> apply style\n  // 2. create multiple stylesheet or scss file, import at our components\n  async applySheet() {\n    const baseCss = this.css.join(\"\\n\");\n    const mediaCss = Object.keys(this.mediaCss)\n                        .map(condition => {\n                          return `${condition} { ${this.mediaCss[condition]} }`;\n                        })\n                        .join(\"\\n\");\n    const finalCss = `${baseCss}\\n${mediaCss}`;\n    await this.sheet.replace(finalCss);\n    this.template.content.adoptedStyleSheets = [this.sheet];\n  }\n\n  prependToSelectors(cssText, elementSelector) {\n    const trimmedCss = cssText.trim();\n\n    if (trimmedCss.startsWith(\"@media\")) {\n      const mediaRegex = /(@media[^{]+)\\s*\\{([\\s\\S]*?)\\s*\\}/;\n      const match = trimmedCss.match(mediaRegex);\n\n      if (!match) {\n        return \"\";\n      }\n\n      const [, mediaCondition, innerRule] = match;\n\n      const [selectorsPart, rulesPart] = innerRule.trim().split(/\\s*{\\s*/);\n\n      const modifiedSelectors = selectorsPart\n        .split(/\\s*,\\s*/)\n        .map(selector => {\n            const trimmedSelector = selector.trim();\n            \n            if (trimmedSelector.startsWith(\".container\")) {\n              return `${elementSelector} > ${trimmedSelector}`;\n            } else {\n              return `${elementSelector} ${trimmedSelector}`;\n            }\n        })\n        .join(\", \");\n\n      const modifiedInnerRule = `${modifiedSelectors} { ${rulesPart} }`;\n\n      this.mediaCss[mediaCondition] = (this.mediaCss[mediaCondition] || \"\") + ` ${modifiedInnerRule}`;\n      // handle media queries here\n      // i have a this.mediaCss planned for this \n      return \"\";\n    }\n\n    if (trimmedCss.startsWith(\":host\")) {\n      const hostCss = trimmedCss.split(\":host\")[1];  \n      return `${elementSelector} ${hostCss}`;\n    }\n\n    const [selectorsPart, rulesPart] = cssText.split(/\\s*{\\s*/);\n\n    const selectors = selectorsPart.split(/\\s*,\\s*/)\n      .map(selector => {\n        if (selector.trim().startsWith(\".container\")) {\n          return `${elementSelector} > ${selector}`\n        } else {\n          return `${elementSelector} ${selector}`\n        }\n      })\n      .join(', ');\n\n    return `${selectors} { ${rulesPart}`;\n  }\n\n  // showPrint() {\n  //   const dialog = document.createElement('dialog');\n  //   dialog.style.height = '400px';\n  //   dialog.style.width = '800px';\n  //   document.body.append(dialog);\n  //   dialog.append(this.template.content);\n  //   // this.applySheet()\n  //   dialog.showModal();\n  // }\n}\n"],"names":["PrintBtn","HTMLElement","constructor","super","this","attachShadow","mode","dataset","printDisable","listener","customEventData","await","awaitDetail","eventName","details","add","render","dom","classes","node","outerHTML","shadowRoot","innerHTML","sanitize","styling","sheet","CSSStyleSheet","replaceSync","toString","adoptedStyleSheets","setupEventListener","addEventListener","handleClick","event","delegated","elem","target","closest","contains","publishCustomEvent","console","log","data","eventDetail","bubbles","composed","detail","publish","err","error","print","getHTML","document","getElementsByTagName","src","html","cloneNode","connectedCallback","ShadowParser","fragment","createDocumentFragment","nodeMap","Map","template","css","mediaCss","foundNode","createElement","walkNode","arrangeNode","applySheet","content","depth","forEach","rules","cssRules","map","rule","prependToSelectors","cssText","tagName","toLowerCase","join","push","childNodes","child","nodeType","styleSheet","styleSheets","set","addSheet","get","length","elTag","newNode","shell","DOMParser","parseFromString","body","firstChild","querySelector","replaceWith","append","searchNode","key","value","hasAttribute","classList","id","style","nodeId","crypto","randomUUID","substring","allCSS","filter","Boolean","finalCss","Object","keys","condition","replace","elementSelector","trimmedCss","trim","startsWith","mediaRegex","match","mediaCondition","innerRule","selectorsPart","rulesPart","split","modifiedInnerRule","selector","trimmedSelector","hostCss"],"sourceRoot":""}