{"version":3,"file":"4245.a8d24b9f5368df60f50b.chunk.js","mappings":"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","sources":["webpack://resume-builder/./src/js/resizeObserverManager.js","webpack://resume-builder/./src/pages/home/resume_classic/resume_classic.js"],"sourcesContent":["import eventManager from \"./eventManager\";\n\nclass ResizeObserverManager {\n  constructor() {\n    this.observedContainer = new Map();\n    this.observedContainerInverse = new WeakMap();\n    this.stabilizationPromises = new Map();\n    this.activePromises = new Map();\n\n    this.resizeObserver = new ResizeObserver(this._handleEntries.bind(this));\n    this.eventConfig = {\n      eventName: \"resizeObserverComplete\",\n      details: {},\n    };\n\n    // console.log(\"ResizeObserverManager: Initialized singleton.\");\n  }\n\n  register(component, element) {\n    if (!component || !element) {\n      console.error(\n        `${this.constructor.name}: Both component and element must be provided for registration.`,\n      );\n      return;\n    }\n\n    if ((!component._observedStates) instanceof Map) {\n      console.error(\n        `${this.constructor.name}: Component ${component.id || component.tagName} does not implement the required properties (_observedStates).`,\n        component,\n      );\n      return;\n    }\n\n    if (!this.observedContainer.has(component)) {\n      this.observedContainer.set(component, new Set());\n    }\n\n    this.observedContainer.get(component).add(element);\n    this.observedContainerInverse.set(element, component);\n    this.resizeObserver.observe(element);\n\n    if (!this.stabilizationPromises.has(component)) {\n      this.stabilizationPromises.set(component, new Map());\n    }\n  }\n\n  delete(component, element) {\n    const observedElementsSet = this.observedContainer.get(component);\n\n    if (observedElementsSet) {\n      observedElementsSet.delete(element);\n      if (observedElementsSet.size === 0) {\n        this.observedContainer.delete(component);\n      }\n    }\n\n    if (this.observedContainerInverse.has(element)) {\n      this.observedContainerInverse.delete(element);\n    }\n\n    this.resizeObserver.unobserve(element);\n\n    const promises = this.stabilizationPromises.get(component);\n    if (promises) {\n      promises.delete(element); \n    }\n  }\n\n  deleteAll(component) {\n    const observedElementsSet = this.observedContainer.get(component);\n\n    if (observedElementsSet) {\n      [...observedElementsSet].forEach((element) => {\n        this.delete(component, element);\n      });\n    }\n\n    this.stabilizationPromises.delete(component);\n    this.activePromises.delete(component);\n  }\n\n  startStabilizationCheck = (component, target) => {\n    const state = component._observedStates.get(target);\n\n    if (state && state.animationFrameId === null) {\n      state.animationFrameId = requestAnimationFrame(() =>\n        this.checkSizeStability(component, target),\n      );\n    }\n  };\n\n  stopStabilizationCheck = (component, target) => {\n    const state = component._observedStates.get(target);\n\n    if (state && state.animationFrameId !== null) {\n      cancelAnimationFrame(target.animationFrameId);\n      state.animationFrameId = null;\n    }\n  };\n\n  checkSizeStability = (component, target) => {\n    const state = component._observedStates.get(target);\n\n    if (!state) return;\n\n    const currentReact = target.getBoundingClientRect();\n    const currentWidth = currentReact.width;\n    const currentHeight = currentReact.height;\n\n    if (\n      !state.lastObservedSize ||\n      Math.round(currentWidth) !== Math.round(state.lastObservedSize.width) ||\n      Math.round(currentHeight) !== Math.round(state.lastObservedSize.height)\n    ) {\n      state.sameSizeFrameCount = 0;\n      state.lastObservedSize = { width: currentWidth, height: currentHeight };\n    } else {\n      state.sameSizeFrameCount++;\n    }\n\n    if (state.sameSizeFrameCount >= 5) {\n      this.stopStabilizationCheck(component, target);\n      state.lastObservedSize = { width: currentWidth, height: currentHeight };\n      state.pendingSize = null;\n\n      this.notifyElementStabilized(component, target, {\n        width: currentWidth,\n        height: currentHeight,\n      });\n    } else {\n      state.animationFrameId = requestAnimationFrame(() =>\n        this.checkSizeStability(component, target),\n      );\n    }\n  };\n\n  notifyElementStabilized(component, stabilizedElement, finalSize) {\n    const promises = this.stabilizationPromises.get(component);\n\n    if (promises && promises.has(stabilizedElement)) {\n      const state = component._observedStates.get(stabilizedElement);\n      if (state && state.resolveStabilization) {\n        state.resolveStabilization(finalSize);\n        state.resolveStabilization = null;\n        promises.delete(stabilizedElement);\n\n        if (promises.size === 0) {\n          const overallResolve = this.activePromises.get(component);\n\n          if (overallResolve && typeof overallResolve === \"function\") {\n            overallResolve(component);\n            this.activePromises.delete(component);\n          }\n        }\n        // this._checkAndPublish(component, finalSize);\n      }\n    }\n  }\n\n  _handleEntries(entries) {\n    for (const entry of entries) {\n      const componentInstance = this.observedContainerInverse.get(entry.target);\n\n      if (componentInstance) {\n        this._initStabilization(componentInstance, entry);\n      } else {\n        console.warn(\n          `${this.constructor.name}: No component instance found for observed element:`,\n          entry.target,\n        );\n      }\n    }\n  }\n\n  _initStabilization(component, entry) {\n    const targetElement = entry.target;\n    const { width, height } = entry.contentRect;\n    const state = component._observedStates.get(targetElement);\n\n    if (state) {\n      state.pendingSize = { width, height };\n      state.sameSizeFrameCount = 0; \n\n      const promises = this.stabilizationPromises.get(component);\n\n      let promise = promises.get(targetElement);\n\n      if (!promise || state.resolveStabilization === null) {\n        promise = new Promise((resolve) => {\n          state.resolveStabilization = resolve;\n        });\n        promises.set(targetElement, promise);\n      }\n\n      if (!this.activePromises.has(component)) {\n        const overallPromise = new Promise((resolve) => {\n          this.activePromises.set(component, resolve);\n        });\n\n        overallPromise\n          .then((resolvedComponent) => {\n            const details = Array.from(\n              resolvedComponent._observedStates.entries(),\n            )\n              .filter(([el, state]) => state.lastObservedSize)\n              .map(([el, state]) => ({\n                element: el,\n                id: el.id || el.dataset.attr || el.constructor.name,\n                width: Math.round((state.lastObservedSize.width + Number.EPSILON) * 100) / 100,\n                height: Math.round((state.lastObservedSize.height + Number.EPSILON) * 100) / 100,\n              }));\n\n            this._publishStabilizationComplete(\n              resolvedComponent,\n              details,\n            );\n\n            this.activePromises.delete(resolvedComponent);\n          })\n          .catch((error) => {\n            console.error(\n              `${this.constructor.name}: Overall component stabilization promise for ${component.id || component.tagName} failed:`,\n              error,\n            );\n          });\n      }\n\n      this.startStabilizationCheck(component, targetElement);\n    }\n  }\n\n  _checkAndPublish(component, lastStableSize) {\n    const promises = this.stabilizationPromises.get(component);\n    if (!promises || promises.size === 0) {\n      return;\n    }\n\n    const promisesArr = Array.from(promises.values());\n\n    Promise.all(promisesArr)\n      .then(() => {\n        this._publishStabilizationComplete(component, lastStableSize);\n        this.stabilizationPromises.delete(component);\n      })\n      .catch((error) => {\n        console.error(\n          `ResizeObserverManager: Promise.all for component ${component.id || component.tagName} failed:`,\n          error,\n        );\n      });\n  }\n\n  _publishStabilizationComplete(component, stabilizedDetails) {\n    const detail = {\n      // componentId: component.id || component.tagName,\n      // target: component,\n      // finalSize: finalSize,\n      stabilizedElements: stabilizedDetails,\n    };\n\n    const eventDetail = {\n      bubbles: true,\n      composed: true,\n      detail: detail,\n    };\n\n    eventManager.publish(this.eventConfig.eventName, eventDetail);\n  }\n}\n\nexport class StabilizationState {\n  constructor() {\n    this.lastObservedSize = null;\n    this.sameSizeFrameCount = 0;\n    this.animationFrameId = null;\n    this.pendingSize = null;\n    this.resolveStabilization = null;\n  }\n}\n\n// const observedElementToComponentMap = new WeakMap();\n//\n// const globalCustomEventData = {\n//   await: false,\n//   awaitDetail() {\n//     return 0;\n//   },\n//   eventName: \"resizeObserverComplete\",\n//   details: \"\",\n// }\n//\n// const globalPublishCustomEvent = async (data) => {\n//   try {\n//     if (data.await) {\n//       await data.awaitDetail();\n//     }\n//\n//     const eventDetail = {\n//       bubbles: true,\n//       composed: true,\n//       detail: data.details,\n//     };\n//\n//     eventManager.publish(data.eventName, eventDetail);\n//   } catch (err) {\n//     console.error(`Failed to publish ${data.eventName}:`, err);\n//   }\n// }\n//\n// export const registerResizeObservation = (component, element) => {\n//   observedElementToComponentMap.set(element, component);\n//   resizeObserver.observe(element);\n// };\n//\n// export const  = (element) => {\n//   if (observedElementToComponentMap.has(element)) {\n//     resizeObserver.unobserve(element);\n//     observedElementToComponentMap.delete(element);\n//   }\n// };\n//\n// const resizeObserver = new ResizeObserver((entries) => {\n//   for (const entry of entries) {\n//     const componentInstance = observedElementToComponentMap.get(entry.target);\n//\n//     if (componentInstance) {\n//       _handleObservedResize(componentInstance, entry);\n//     } else {\n//       console.warn(\n//         `ResizeObserver: No component instance or handler found for observed element:`,\n//         entry.target,\n//       );\n//     }\n//     // const { width, height } = entry.contentRect;\n//     // entry.target._pendingSize = { width, height };\n//     // entry.target._sameSizeFrameCount = 0;\n//\n//     // startStabilizationCheck(entry.target._resizeTargets);\n//   }\n// });\n//\n// const _handleObservedResize = (component, entry) => {\n//   const targetElement = entry.target;\n//   const { width, height } = entry.contentRect;\n//   const state = component._observedStates.get(targetElement);\n//\n//   if (state) {\n//     state.pendigSize = { width, height };\n//     state.sameSizeFrameCount = 0;\n//     startStabilizationCheck(component, targetElement);\n//   }\n// };\n//\n// const startStabilizationCheck = (component, target) => {\n//   const state = component._observedStates.get(target);\n//\n//   if (state && state.animationFrameId === null) {\n//     state.animationFrameId = requestAnimationFrame(() =>\n//       checkSizeStability(component, target),\n//     );\n//   }\n// };\n//\n// export const stopStabilizationCheck = (component, target) => {\n//   const state = component._observedStates.get(target);\n//\n//   if (state && state.animationFrameId !== null) {\n//     cancelAnimationFrame(target.animationFrameId);\n//     state.animationFrameId = null;\n//   }\n// };\n//\n// const checkSizeStability = (component, target) => {\n//   const state = component._observedStates.get(target);\n//\n//   if (!state) return;\n//\n//   const currentReact = target.getBoundingClientRect();\n//   const currentWidth = currentReact.width;\n//   const currentHeight = currentReact.height;\n//\n//   if (\n//     !state.lastObservedSize ||\n//     Math.round(currentWidth) !== Math.round(state.lastObservedSize.width) ||\n//     Math.round(currentHeight) !== Math.round(state.lastObservedSize.height)\n//   ) {\n//     state.sameSizeFrameCount = 0;\n//     state.lastObservedSize = { width: currentWidth, height: currentHeight };\n//   } else {\n//     state.sameSizeFrameCount++;\n//   }\n//\n//   if (state.sameSizeFrameCount >= 5) {\n//     console.log(target);\n//     console.log(currentWidth);\n//     stopStabilizationCheck(component, target);\n//     state._lastObservedSize = { width: currentWidth, height: currentHeight };\n//     state._pendingSize = null;\n//   } else {\n//     state._animationFrameId = requestAnimationFrame(() =>\n//       checkSizeStability(component, target),\n//     );\n//   }\n// };\n\nexport default new ResizeObserverManager();\n","import DOMPurify from \"dompurify\";\nimport Listener from \"../../../js/listener.js\";\nimport {\n  getRegisteredCustomElements,\n  registerCustomElement,\n} from \"../../../js/registerComponent.js\";\nimport styles from \"./resume_classic.shadow.scss\";\nimport eventManager from \"../../../js/eventManager.js\";\nimport objectRegistry from \"../../../js/objectRegistry.js\";\nimport resizeObserverManager, {\n  StabilizationState,\n} from \"../../../js/resizeObserverManager.js\";\nimport { loadComponent } from \"../../../js/helper.js\";\n\nexport default class ResumeClassic extends HTMLElement {\n  constructor() {\n    super();\n    this.attachShadow({ mode: \"open\" });\n    this.isReadyPromise = new Promise(resolve => {\n      this.resolveReady = resolve;\n    });\n    this.listener;\n    this.customEventData = {\n      await: false,\n      awaitDetail() {\n        return 0;\n      },\n      eventName: \"handleCustomEvent\",\n      details: \"\",\n    };\n    this.dataset.templateStyle;\n    this.infoElement;\n    this.skillsElement;\n    this.eduElement;\n    this.expElement;\n    this.completeFormRequestData;\n    this.unsubscribe;\n    this.compList = []; \n    this.template = document.createElement(\"template\");\n  }\n\n  async connectedCallback() {\n    this.setup();\n    this.setupEventListener();\n    await this.loadComponents();\n    await this.render();\n    this.styling();\n    this.setupGenericEventListener();\n    this.componentReady();\n  }\n\n  disconnectedCallback() {\n    this.unsubscribe();\n    this.abortGenericEventListener();\n  }\n\n  setup() {\n    this.compList = [\n        // {\n        //   path: `home/resume_${this.dataset.templateStyle}/userPic/userPic.js`,\n        //   tagName: \"user-pic\",\n        //   folderType: \"pages\",\n        // },\n        {\n          path: `home/resume_${this.dataset.templateStyle}/details/details.js`,\n          tagName: `user-details-${this.dataset.templateStyle}`,\n          folderType: \"pages\",\n        },\n        {\n          path: `home/resume_${this.dataset.templateStyle}/skills/skills.js`,\n          tagName: `user-skills-${this.dataset.templateStyle}`,\n          folderType: \"pages\",\n        },\n        {\n          path: `home/resume_${this.dataset.templateStyle}/educations/educations.js`,\n          tagName: `user-educations-${this.dataset.templateStyle}`,\n          folderType: \"pages\",\n        },\n        {\n          path: `home/resume_${this.dataset.templateStyle}/experiences/experiences.js`,\n          tagName: `user-experiences-${this.dataset.templateStyle}`,\n          folderType: \"pages\",\n        },\n    ];\n    this.template.innerHTML = `\n      <div class=\"container\">\n        <div class=\"info\" data-attr=\"info\" data-elem-type=\"component\">\n          <user-details-${this.dataset.templateStyle}></user-details-${this.dataset.templateStyle}>\n        </div>\n        <div class=\"skills\" data-attr=\"skills\" data-elem-type=\"component\">\n          <user-skills-${this.dataset.templateStyle}></user-skills-${this.dataset.templateStyle}>\n        </div>\n        <div class=\"edu\" data-attr=\"edu\" data-elem-type=\"component\">\n          <user-educations-${this.dataset.templateStyle}></user-educations-${this.dataset.templateStyle}>\n        </div>\n        <div class=\"exp\" data-attr=\"exp\" data-elem-type=\"component\">\n          <user-experiences-${this.dataset.templateStyle}></user-experiences-${this.dataset.templateStyle}>\n        </div>\n      </div>\n    `;\n  }\n\n  async loadComponents() {\n    const subComponents = [\n      customElements.get(`user-details-${this.dataset.templateStyle}`),\n      customElements.get(`user-skills-${this.dataset.templateStyle}`),\n      customElements.get(`user-educations-${this.dataset.templateStyle}`),\n      customElements.get(`user-experiences-${this.dataset.templateStyle}`),\n    ];\n\n    const validSubComponents = subComponents.filter(comp => comp && typeof comp === \"function\");\n\n    if (validSubComponents.length > 0) {\n      await new Promise(resolve => requestAnimationFrame(() => resolve()));\n    } else {\n      const compPromises = loadComponent(this.compList);\n      await Promise.all(compPromises);\n    } \n  }\n\n  async render() {\n    this.shadowRoot.append(this.template.content.cloneNode(true));\n    // const styleToImport = \"data-style=default\";\n    // const dom = `\n    //   <div class=\"container\">\n    //     <div class=\"info\" data-attr=\"info\" data-elem-type=\"component\">\n    //       <user-details ${styleToImport}></user-details>\n    //     </div>\n    //     <div class=\"skills\" data-attr=\"skills\" data-elem-type=\"component\">\n    //       <user-skills ${styleToImport}></user-skills>\n    //     </div>\n    //     <div class=\"edu\" data-attr=\"edu\" data-elem-type=\"component\">\n    //       <user-educations ${styleToImport}></user-educations>\n    //     </div>\n    //     <div class=\"exp\" data-attr=\"exp\" data-elem-type=\"component\">\n    //       <user-experiences ${styleToImport}></user-experiences>\n    //     </div>\n    //   </div>\n    // `;\n\n    // const registeredComponents = getRegisteredCustomElements();\n\n    // DOMPurify.addHook(\"uponSanitizeElement\", (_, data) => {\n    //   if (registeredComponents.includes(data.tagName) !== -1) {\n    //     data.allowedTags[data.tagName] = true;\n    //   }\n    // });\n    \n    // const componentCnt = (dom.match(new RegExp('data-elem-type=[\"component\"]', \"g\")) || []).length;\n    //\n    // const componentCnt = this.template.content.querySelectorAll('[data-elem-type=\"component\"]').length;\n    // let state = new Map();\n    // state.set(\"componentCnt\", componentCnt);\n    // state.set(\"readyCnt\", 0);\n    // objectRegistry.set(\"resumeComponentLoaded\", state);\n\n    // this.shadowRoot.innerHTML = DOMPurify.sanitize(dom);\n    this.infoElement = this.shadowRoot.querySelector(\".info\");\n    this.skillsElement = this.shadowRoot.querySelector(\".skills\");\n    this.eduElement = this.shadowRoot.querySelector(\".edu\");\n    this.expElement = this.shadowRoot.querySelector(\".exp\");\n\n    await new Promise(resolve => requestAnimationFrame(() => resolve()));\n  }\n\n  async styling() {\n    const sheet = new CSSStyleSheet();\n    //const cssModule = import('./details.shadow.scss');\n    sheet.replaceSync(styles.toString());\n    // styles.use({ target: this.shadowRoot });\n    this.shadowRoot.adoptedStyleSheets = [sheet];\n  }\n\n  setupEventListener() {\n    this.listener = new Listener(this);\n    this.listener.setDelegates(this); \n    this.unsubscribe = eventManager.subscribe(\n      [\"updateEduStyle\", \"resizeObserverComplete\", \"completeFormRequest\"],\n      this.listener,\n    );\n  }\n\n  setupGenericEventListener() {  \n    this._observedStates = new Map();\n    this._observedStates.set(this, new StabilizationState());\n    this._observedStates.set(this.infoElement, new StabilizationState());\n    this._observedStates.set(this.eduElement, new StabilizationState());\n\n    resizeObserverManager.register(this, this);\n    resizeObserverManager.register(this, this.infoElement);\n    resizeObserverManager.register(this, this.eduElement);\n    // registerResizeObservation(this, this);\n    // registerResizeObservation(this, this.eduElement);\n  }\n\n  abortGenericEventListener() {\n    this._observedStates.forEach((state, element) => {\n      resizeObserverManager.stopStabilizationCheck(this, element);\n      resizeObserverManager.delete(this, element);\n    });\n  }\n\n  handleUpdateEduStyle(event, delegated) {\n    const isDOM = delegated instanceof Listener;\n\n    if (isDOM) {\n      this.shadowRoot\n        .querySelector(\".container\")\n        .classList.add(\"edu-multi-line\");\n    } else {\n      console.log(\"external\");\n    }\n  }\n\n  handleResizeObserverComplete(event, delegated) {\n    const isDOM = delegated instanceof Listener;\n\n    if (isDOM) {\n      const details = event.detail.stabilizedElements;\n      let sizes = {};\n\n      details.forEach((detail) => {\n        sizes[detail.id] = detail;\n      });\n\n      if (\n        sizes[this.constructor.name].width ==\n        sizes[this.eduElement.dataset.attr].width\n      ) {\n        this.eduElement.classList.add(\"fullWidth\");\n      } else {\n        this.eduElement.classList.remove(\"fullWidth\");\n      }\n\n      sizes[this.constructor.name].width ==\n      sizes[this.infoElement.dataset.attr].width\n        ? this.infoElement.classList.add(\"fullWidth\")\n        : this.infoElement.classList.remove(\"fullWidth\");\n\n      this.customEventData.await = false;\n      this.customEventData.awaitDetail = () => { return 0; };\n      this.customEventData.eventName = \"previewVisible\";\n      this.customEventData.details = {}\n      this.publishCustomEvent(this.customEventData);\n      this.resolveReady();\n    } else {\n      console.log(\"external\");\n    }\n  }\n\n  handleCompleteFormRequest(event, delegated) {\n    const isDOM = delegated instanceof Listener;\n\n    if (isDOM) {\n      // this.customEventData.await = false;\n      // this.customEventData.awaitDetail = () => { return 0; };\n      // this.customEventData.eventName = \"fillResumeComponent\";\n      // this.customEventData.details = { data: event.detail.data }\n      // this.publishCustomEvent(this.customEventData);\n      this.completeFormRequestData = event.detail.data;\n\n      if (Object.values(event.detail.data.owner.skills).length > 9) {\n        this.shadowRoot.querySelector(\".container\").classList.add(\"all-fullWidth\"); \n      }\n    } else {\n      console.log(\"external\");\n    }\n  } \n\n  async publishCustomEvent(data) {\n    try {\n      if (data.await) {\n        await data.awaitDetail();\n      }\n\n      const eventDetail = {\n        bubbles: true,\n        composed: true,\n        detail: data.details,\n      };\n\n      eventManager.publish(data.eventName, eventDetail);\n    } catch (err) {\n      console.error(`Failed to publish ${data.eventName} : ${err}`);\n    }\n  }\n\n  async componentReady() {\n    const subComponents = [\n      this.shadowRoot.querySelector(`user-details-${this.dataset.templateStyle}`),\n      this.shadowRoot.querySelector(`user-skills-${this.dataset.templateStyle}`),\n      this.shadowRoot.querySelector(`user-educations-${this.dataset.templateStyle}`),\n      this.shadowRoot.querySelector(`user-experiences-${this.dataset.templateStyle}`),\n    ];\n\n    const validSubComponents = subComponents.filter(comp => comp && typeof comp.isReadyPromise === \"object\");\n\n    if (validSubComponents.length > 0) {\n      await Promise.all(validSubComponents.map(comp => comp.isReadyPromise));\n    } else {\n      await new Promise(resolve => requestAnimationFrame(() => requestAnimationFrame(resolve)));\n    }\n\n    const fontPromise = document.fonts ? document.fonts.ready : Promise.resolve();\n    await Promise.all([fontPromise]);\n\n    this.customEventData.await = false;\n    this.customEventData.awaitDetail = () => { return 0; };\n    this.customEventData.eventName = \"fillResumeComponent\";\n    this.customEventData.details = { data: this.completeFormRequestData }\n    this.publishCustomEvent(this.customEventData);\n\n    this.customEventData.await = false;\n    this.customEventData.awaitDetail = () => { return 0; };\n    this.customEventData.eventName = \"resumeRendered\";\n    this.customEventData.details = {}\n    this.publishCustomEvent(this.customEventData);\n    this.resolveReady();\n  }\n}\n\n//customElements.define('resume-home', Home);\nregisterCustomElement(\"resume-classic\", ResumeClassic);\n"],"names":["StabilizationState","constructor","this","lastObservedSize","sameSizeFrameCount","animationFrameId","pendingSize","resolveStabilization","observedContainer","Map","observedContainerInverse","WeakMap","stabilizationPromises","activePromises","resizeObserver","ResizeObserver","_handleEntries","bind","eventConfig","eventName","details","register","component","element","_observedStates","console","error","name","id","tagName","has","set","Set","get","add","observe","observedElementsSet","delete","size","unobserve","promises","deleteAll","forEach","startStabilizationCheck","target","state","requestAnimationFrame","checkSizeStability","stopStabilizationCheck","cancelAnimationFrame","currentReact","getBoundingClientRect","currentWidth","width","currentHeight","height","Math","round","notifyElementStabilized","stabilizedElement","finalSize","overallResolve","entries","entry","componentInstance","_initStabilization","warn","targetElement","contentRect","promise","Promise","resolve","then","resolvedComponent","Array","from","filter","el","map","dataset","attr","Number","EPSILON","_publishStabilizationComplete","catch","_checkAndPublish","lastStableSize","promisesArr","values","all","stabilizedDetails","eventDetail","bubbles","composed","detail","stabilizedElements","publish","ResumeClassic","HTMLElement","super","attachShadow","mode","isReadyPromise","resolveReady","listener","customEventData","await","awaitDetail","templateStyle","infoElement","skillsElement","eduElement","expElement","completeFormRequestData","unsubscribe","compList","template","document","createElement","connectedCallback","setup","setupEventListener","loadComponents","render","styling","setupGenericEventListener","componentReady","disconnectedCallback","abortGenericEventListener","path","folderType","innerHTML","customElements","comp","length","compPromises","shadowRoot","append","content","cloneNode","querySelector","sheet","CSSStyleSheet","replaceSync","toString","adoptedStyleSheets","setDelegates","subscribe","handleUpdateEduStyle","event","delegated","classList","log","handleResizeObserverComplete","sizes","remove","publishCustomEvent","handleCompleteFormRequest","data","Object","owner","skills","err","validSubComponents","fontPromise","fonts","ready"],"sourceRoot":""}