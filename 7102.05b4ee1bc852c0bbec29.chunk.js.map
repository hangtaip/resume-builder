{"version":3,"file":"7102.05b4ee1bc852c0bbec29.chunk.js","mappings":"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","sources":["webpack://resume-builder/./src/components/printBtn/printBtn.js","webpack://resume-builder/./src/js/objectRegistry.js","webpack://resume-builder/./src/components/previewResume/previewResume.js","webpack://resume-builder/./src/js/shadowParser.js"],"sourcesContent":["import DOMPurify from \"dompurify\";\nimport Listener from \"../../js/listener.js\";\nimport { registerCustomElement } from \"../../js/registerComponent.js\";\nimport ShadowParser from \"../../js/shadowParser.js\";\nimport styles from \"./printBtn.shadow.scss\";\nimport { icon, library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faPrint } from \"@fortawesome/free-solid-svg-icons\";\nimport eventManager from \"../../js/eventManager.js\";\n\nexport default class PrintBtn extends HTMLElement {\n  constructor() {\n    super();\n    this.attachShadow({ mode: \"open\" });\n    this.dataset.printDisable = true;\n    this.listener;\n    this.customEventData = {\n      await: false,\n      awaitDetail() {\n        return 0;\n      },\n      eventName: \"handleCustomEvent\",\n      details: \"\",\n    };\n    library.add(faPrint);\n  }\n\n  render() {\n    const i = icon(faPrint, {\n      classes: [\"fa-print\"],\n    });\n\n    const dom = `\n      <div class=\"container\">\n\t  <button type=\"button\" title=\"Print\" class=\"clickable\">\n\t    ${i.node[0].outerHTML}\n\t  </button>\n      </div>\n      `;\n\n    this.shadowRoot.innerHTML = DOMPurify.sanitize(dom);\n  }\n\n  styling() {\n    const sheet = new CSSStyleSheet();\n    sheet.replaceSync(styles.toString());\n    this.shadowRoot.adoptedStyleSheets = [sheet];\n  }\n\n  setupEventListener() {\n    this.listener = new Listener(this);\n    this.shadowRoot.addEventListener(\"click\", this.listener);\n  }\n\n  handleClick(event, delegated) {\n    const isDOM = delegated instanceof Listener;\n\n    if (isDOM) {\n      const elem = event.target.closest(\".clickable\");\n\n      if (!elem) return;\n      if (!this.shadowRoot.contains(elem)) return;\n\n      this.customEventData.await = false;\n      this.customEventData.awaitDetail = () => {\n\treturn 0;\n      };\n      this.customEventData.eventName = \"printResume\";\n      this.customEventData.details = { \"\" : \"\" };\n      this.publishCustomEvent(this.customEventData);\n    } else {\n      console.log(\"external\");\n    }\n  }\n\n  async publishCustomEvent(data) {\n    try {\n      if (data.await) {\n        await data.awaitDetail();\n      }\n\n      const eventDetail = {\n        bubbles: true,\n        composed: true,\n        detail: data.details,\n      };\n\n      eventManager.publish(data.eventName, eventDetail);\n    } catch (err) {\n      console.error(`Failed to publish ${data.eventName} : ${err}`);\n    }\n  }\n\n  print() {\n    // window.print();\n    const src = this.getHTML(document.getElementsByTagName(\"resume-home\")[0]);\n    // const element = document.getElementsByTagName(\"resume-home\")[0];\n  }\n\n  getHTML(src) {\n    const parser = new ShadowParser();\n    const html = parser.cloneNode(src);\n    console.log(html);\n  }\n\n  connectedCallback() {\n    this.render();\n    this.styling();\n    this.setupEventListener();\n  }\n}\n\nregisterCustomElement(\"print-btn\", PrintBtn);\n","class ObjectRegistry {\n  constructor() {\n    this.registry = new Map();\n  }\n\n  set(key, value) {\n    this.registry.set(key, value);\n  }\n\n  get(key) {\n    return this.registry.get(key);\n  }\n\n  clear() {\n    this.registry.forEach((_, key) => this.registry.delete(key));\n  }\n}\n\nexport default new ObjectRegistry();\n","import DOMPurify from \"dompurify\";\nimport Listener from \"../../js/listener.js\";\nimport ShadowParser from \"../../js/shadowParser.js\";\nimport { registerCustomElement } from \"../../js/registerComponent.js\";\nimport styles from \"./previewResume.shadow.scss\";\nimport { icon, library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faSquareXmark } from \"@fortawesome/free-solid-svg-icons\";\nimport eventManager from \"../../js/eventManager.js\";\nimport objectRegistry from \"../../js/objectRegistry.js\";\nimport \"../printBtn/printBtn.js\";\n\nexport default class PreviewResume extends HTMLElement {\n  constructor() {\n    super();\n    this.attachShadow({ mode: \"open\" });\n    this.listener;\n    this.customEventData = {\n      await: false,\n      awaitDetail() {\n        return 0;\n      },\n      eventName: \"handleCustomEvent\",\n      details: \"\",\n    };\n    this.unsubscribe;\n    library.add(faSquareXmark);\n  }\n\n  connectedCallback() {\n    this.render();\n    this.styling();\n    this.setupEventListener();\n  }\n\n  disconnectedCallback() {\n    this.unsubscribe();\n  }\n\n  render() {\n    const mark = icon(faSquareXmark, { classes: [\"fa-x-mark\"] });\n    const dom = `\n         <div class=\"container\">\n            <dialog class=\"clickable print-dlg visibility-none\">\n               <button class=\"clickable cancel-btn\" title=\"cancel\" type=\"button\">\n                  ${mark.node[0].outerHTML}\n               </button>\n               <form>\n                  <fieldset>\n                     <legend>Preview</legend>\n                     <article class=\"printable\">\n                     </article>\n                  </fieldset>\n               </form>\n               <print-btn></print-btn>\n            </dialog>\n         </div>\n         `;\n\n    this.shadowRoot.innerHTML = DOMPurify.sanitize(dom);\n  }\n\n  styling() {\n    const sheet = new CSSStyleSheet();\n    sheet.replaceSync(styles.toString());\n    this.shadowRoot.adoptedStyleSheets = [sheet];\n  }\n\n  setupEventListener() {\n    this.listener = new Listener(this);\n    this.listener.setDelegates(this);\n    // this.listener.setDelegates(this.shadowRoot.querySelector(\".cancel-btn\"));\n    // this.listener.setDelegates(\n    //   this.shadowRoot.querySelector(`input[type=\"radio\"]`),\n    // );\n    this.shadowRoot.addEventListener(\"click\", this.listener);\n    this.shadowRoot.addEventListener(\"change\", this.listener);\n    this.shadowRoot.querySelector(\"dialog\").addEventListener(\"close\", this.listener);\n    this.subscribe = eventManager.subscribe([\"appendResume\", \"showPreview\", \"printResume\", \"previewVisible\"] , this.listener);\n  }\n\n  handleClick(event, delegated) {\n    const isDOM = delegated instanceof Listener;\n\n    if (isDOM) {\n      let elem = event.target.closest(\".clickable\");\n\n      if (!elem) return;\n      if (!this.shadowRoot.contains(elem)) return;\n\n      const dialog = this.shadowRoot.querySelector(\"dialog\");\n\n      switch (true) {\n        case elem.classList.contains(\"cancel-btn\"):\n          dialog.close();\n          break;\n        case elem.classList.contains(\"print-dlg\"):\n          const compStyle = window.getComputedStyle(dialog);\n\n          if (\n            event.x < dialog.getBoundingClientRect().left ||\n            event.x > dialog.getBoundingClientRect().right ||\n            event.y < dialog.getBoundingClientRect().top ||\n            event.y > dialog.getBoundingClientRect().bottom\n          ) {\n            dialog.close();\n          }\n          break;\n      }\n    } else {\n      console.log(\"external\");\n    }\n  }\n\n  handleClose(event, delegated) {\n    const isDOM = delegated instanceof Listener;\n\n    if (isDOM) {\n      this.shadowRoot.querySelector(\"dialog\").classList.add(\"visibility-none\", \"closing\");\n    } else {\n      console.log(\"external\");\n    }\n  }\n\n  handleAppendResume(event, delegated) {\n    const isDOM = delegated instanceof Listener;\n\n    if (isDOM) {\n      const elem = this.shadowRoot.querySelector(\"article\");\n      const page = document.createElement(`resume-${event.detail.resumeStyle}`);\n      // const newElem = elem.cloneNode(true);\n      const newElem = document.createElement(\"article\");\n      newElem.classList.add(\"printable\");\n      newElem.append(page);\n      elem.parentNode.replaceChild(newElem, elem);\n\n      // setTimeout(() => {\n      //   this.shadowRoot.querySelector(\"dialog\").showModal();\n      // },100);\n    } else { \n      console.log(\"external\"); \n    }\n  } \n\n  handleShowPreview(event, delegated) {\n    const isDOM = delegated instanceof Listener;\n\n    if (isDOM) {\n      this.shadowRoot.querySelector(\"dialog\").showModal(); \n    } else {\n      console.log(\"external\");\n    }\n  }\n\n  handlePreviewVisible(event, delegated) {\n    const isDOM = delegated instanceof Listener;\n\n    if (isDOM) {\n      const dialog = this.shadowRoot.querySelector(\"dialog\");\n      if (!dialog.classList.contains(\"closing\")) {\n        dialog.classList.remove(\"visibility-none\");\n\n        this.customEventData.await = false;\n        this.customEventData.awaitDetail = () => { return 0; };\n        this.customEventData.eventName = \"stopLoading\";\n        this.customEventData.details = {}\n        this.publishCustomEvent(this.customEventData);\n\n        return 0;\n      } else {\n        dialog.classList.remove(\"closing\");\n      }\n    } else {\n      console.log(\"external\");\n    }\n  }\n\n  handlePrintResume(event, delegated) {\n    const isDOM = delegated instanceof Listener;\n\n    if (isDOM) {\n      const elem = this.shadowRoot.querySelector(\".printable\");\n\n      if (!elem) return;\n      if (!this.shadowRoot.contains(elem)) return;\n\n      this.setPrint();\n \n    } else {\n      console.log(\"external\");\n    }\n  }\n\n  setPrint() {\n    const parser = new ShadowParser();\n    const content = parser.cloneNode(this.shadowRoot.querySelector(\"article.printable\"));\n    const cssRules = [...parser.sheet.cssRules].map(rule => rule.cssText).join(\"\\n\");\n\n    const iframe = document.createElement(\"iframe\"); \n    iframe.style.display = \"none\";\n    // iframe.style.height = \"100%\";\n    // iframe.style.width = \"100%\";\n    // iframe.style.position = \"absolute\";\n    // iframe.style.left = \"-9999px\";\n    document.body.appendChild(iframe);\n\n    iframe.onload = () => {\n      iframe.contentWindow.print();\n      document.body.removeChild(iframe);\n    }\n\n    iframe.contentDocument.write(`\n      <!DOCTYPE html>\n        <head>\n          <title>Print</title>\n        </head>\n        <body>\n        </body>\n      </html>\n    `);\n    iframe.contentDocument.body.appendChild(content);\n\n    // need to include \n    const iframeSheet = new iframe.contentDocument.defaultView.CSSStyleSheet();\n    iframeSheet.replaceSync(cssRules);\n    iframe.contentDocument.adoptedStyleSheets = [iframeSheet];\n\n    iframe.contentDocument.close();\n  } \n\n  async publishCustomEvent(data) {\n    try {\n      if (data.await) {\n        await data.awaitDetail();\n      }\n\n      const eventDetail = {\n        bubbles: true,\n        composed: true,\n        detail: data.details,\n      };\n\n      eventManager.publish(data.eventName, eventDetail);\n    } catch (err) {\n      console.error(`Failed to publish ${data.eventName} : ${err}`);\n    }\n  }\n}\n\nregisterCustomElement(\"preview-resume\", PreviewResume);\n","export default class ShadowParser {\n  constructor() {\n    this.fragment = document.createDocumentFragment();\n    this.nodeMap = new Map();\n    this.template;\n    this.sheet = new CSSStyleSheet();\n    this.css = [];\n    this.mediaCss = {}; \n    this.foundNode;\n  }\n\n  cloneNode(node) {\n    this.template = document.createElement(\"template\");\n    this.walkNode(node);\n    this.arrangeNode(node);\n    this.applySheet();\n\n    return this.template.content;\n  }\n\n  walkNode(node, depth = 0) {\n    if (node.shadowRoot) {\n      const styleSheets = node.shadowRoot.adoptedStyleSheets;\n      styleSheets.forEach(sheet => {\n        const rules = [...sheet.cssRules].map(rule => {\n          return this.prependToSelectors(rule.cssText, node.tagName.toLowerCase());\n        }).join(\"\\n\");\n        this.css.push(rules);\n        // console.log(rules);\n      });\n      node.shadowRoot.childNodes.forEach((child) => {\n        if (node.dataset?.printDisable || child.dataset?.printDisable) {\n          return;\n        }\n        if (child.nodeType == 1) {\n          // const shell = new DOMParser().parseFromString(\n          //   node.outerHTML,\n          //   \"text/html\",\n          // ).body.firstChild;\n\n          if (child.tagName.toLowerCase() == \"style\") {\n            const styleSheet = node.shadowRoot.styleSheets;\n            // for <style> usage\n            this.nodeMap.set(`${node.tagName.toLowerCase()}-style`, styleSheet);\n            // for CSSStyleSheet usage - current\n            this.addSheet(node.tagName.toLowerCase(), styleSheet, depth);\n          } else if (!this.nodeMap.get(node.tagName.toLowerCase())) {\n            this.nodeMap.set(node.tagName.toLowerCase(), child);\n          }\n        }\n      });\n\n      this.walkNode(node.shadowRoot, depth + 1);\n    } else {\n      if (node.childNodes.length) {\n        node.childNodes.forEach((child) => {\n          this.walkNode(child, depth + 1);\n        });\n      }\n    }\n  }\n\n  arrangeNode(node) {\n    if (node.shadowRoot) {\n      node.shadowRoot.childNodes.forEach((child) => {\n        if (node.dataset?.printDisable || child.dataset?.printDisable) {\n          return;\n        }\n        if (child.nodeType == 1) {\n          if (child.tagName.toLowerCase() != \"style\") {\n            const elTag = node.tagName.toLowerCase();\n            const newNode = this.nodeMap.get(elTag);\n            // TODO: can be replaced with simple div -> move the nodeId here, add to our element, then pass to addSheet\n            const shell = new DOMParser().parseFromString(\n              node.outerHTML,\n              \"text/html\",\n            ).body.firstChild;\n\n            if (this.template.content.querySelector(elTag)) {\n              this.template.content\n                .querySelector(elTag)\n                .replaceWith(shell.cloneNode(true));\n              this.template.content\n                .querySelector(elTag)\n                .append(newNode.cloneNode(true));\n            } else {\n              this.template.content.append(shell.cloneNode(true));\n              this.template.content\n                .querySelector(elTag)\n                .append(newNode.cloneNode(true));\n            }\n          } else if (!this.nodeMap.get(node.tagName.toLowerCase())) {\n          }\n        }\n      });\n\n      this.arrangeNode(node.shadowRoot);\n    } else {\n      if (node.childNodes.length) {\n        node.childNodes.forEach((child) => {\n          // console.log('lightDom');\n          // console.log(child);\n          this.arrangeNode(child);\n        });\n      }\n    }\n  }\n\n  // TODO: use regex for (.#[])\n  searchNode(node, key, value) {\n    if (node.shadowRoot) {\n      node.shadowRoot.childNodes.forEach((child) => {\n        if (child.nodeType == 1) {\n          if (child.tagName.toLowerCase() != \"style\") {\n            switch (key) {\n              case \"attr\" || \"attribute\":\n                if (child.hasAttribute(value)) {\n                  this.foundNode = child;\n                }\n                break;\n              case \"class\":\n                if (child.classList.contains(value)) {\n                  this.foundNode = child;\n                }\n                break;\n              case \"dataset\":\n                if (child.dataset[value]) {\n                  this.foundNode = child;\n                }\n                break;\n              case \"id\":\n                if (child.id == value) {\n                  this.foundNode = child;\n                }\n                break;\n              case \"tagName\":\n                if (child.tagName.toLowerCase() == value.toLowerCase()) {\n                  this.foundNode = child;\n                }\n                break;\n            }\n          }\n        }\n      });\n\n      this.searchNode(node.shadowRoot, key, value);\n    } else {\n      if (node.childNodes.length) {\n        node.childNodes.forEach((child) => {\n          if (child.nodeType == 1) {\n            switch (key) {\n              case \"attr\" || \"attribute\":\n                if (child.hasAttribute(value)) {\n                  this.foundNode = child;\n                }\n                break;\n              case \"class\":\n                if (child.classList.contains(value)) {\n                  this.foundNode = child;\n                }\n                break;\n              case \"dataset\":\n                if (child.dataset[value]) {\n                  this.foundNode = child;\n                }\n                break;\n              case \"id\":\n                if (child.id == value) {\n                  this.foundNode = child;\n                }\n                break;\n              case \"tagName\":\n                if (child.tagName.toLowerCase() == value.toLowerCase()) {\n                  this.foundNode = child;\n                }\n                break;\n            }\n\n             this.searchNode(child, key, value);\n          }\n        });\n      }\n    }\n\n    return this.foundNode;\n  }\n\n  addSheet(tagName, style, depth) {\n    const nodeId = `${tagName}-${depth}-${crypto.randomUUID().substring(0, 8)}`;\n\n    const allCSS = [...style]\n      .map((styleSheet) => {\n        return [...styleSheet.cssRules].map((rule) => {\n          return `.${nodeId} ${rule.cssText}`;\n        });\n      })\n      .filter(Boolean)\n      .join(\"\\n\");\n\n    this.css.push(allCSS);\n    // const allCSS = [...style[0].cssRules].map((rule) => {\n    //     const newRule = `.${nodeId} ${rule.cssText}`;\n    //     return newRule;\n    //   })\n    //   .filter(Boolean)\n    //   .join('\\n');\n  }\n\n  // because we use CSSStyleSheet for our components and we reuse the tag, existing style will still apply\n  // TODO: for different design, we have to either:\n  // 1. use simple div -> attach nodeID -> apply style\n  // 2. create multiple stylesheet or scss file, import at our components\n  async applySheet() {\n    const baseCss = this.css.join(\"\\n\");\n    const mediaCss = Object.keys(this.mediaCss)\n                        .map(condition => {\n                          return `${condition} { ${this.mediaCss[condition]} }`;\n                        })\n                        .join(\"\\n\");\n    const finalCss = `${baseCss}\\n${mediaCss}`;\n    await this.sheet.replace(finalCss);\n    this.template.content.adoptedStyleSheets = [this.sheet];\n  }\n\n  prependToSelectors(cssText, elementSelector) {\n    const trimmedCss = cssText.trim();\n\n    if (trimmedCss.startsWith(\"@media\")) {\n      const mediaRegex = /(@media[^{]+)\\s*\\{([\\s\\S]*?)\\s*\\}/;\n      const match = trimmedCss.match(mediaRegex);\n\n      if (!match) {\n        return \"\";\n      }\n\n      const [, mediaCondition, innerRule] = match;\n\n      const [selectorsPart, rulesPart] = innerRule.trim().split(/\\s*{\\s*/);\n\n      const modifiedSelectors = selectorsPart\n        .split(/\\s*,\\s*/)\n        .map(selector => {\n            const trimmedSelector = selector.trim();\n            \n            if (trimmedSelector.startsWith(\".container\")) {\n              return `${elementSelector} > ${trimmedSelector}`;\n            } else {\n              return `${elementSelector} ${trimmedSelector}`;\n            }\n        })\n        .join(\", \");\n\n      const modifiedInnerRule = `${modifiedSelectors} { ${rulesPart} }`;\n\n      this.mediaCss[mediaCondition] = (this.mediaCss[mediaCondition] || \"\") + ` ${modifiedInnerRule}`;\n      // handle media queries here\n      // i have a this.mediaCss planned for this \n      return \"\";\n    }\n\n    const [selectorsPart, rulesPart] = cssText.split(/\\s*{\\s*/);\n\n    const selectors = selectorsPart.split(/\\s*,\\s*/)\n      .map(selector => {\n        if (selector.trim().startsWith(\".container\")) {\n          return `${elementSelector} > ${selector}`\n        } else {\n          return `${elementSelector} ${selector}`\n        }\n      })\n      .join(', ');\n\n    return `${selectors} { ${rulesPart}`;\n  }\n\n  // showPrint() {\n  //   const dialog = document.createElement('dialog');\n  //   dialog.style.height = '400px';\n  //   dialog.style.width = '800px';\n  //   document.body.append(dialog);\n  //   dialog.append(this.template.content);\n  //   // this.applySheet()\n  //   dialog.showModal();\n  // }\n}\n"],"names":["PrintBtn","HTMLElement","constructor","super","this","attachShadow","mode","dataset","printDisable","listener","customEventData","await","awaitDetail","eventName","details","add","render","dom","classes","node","outerHTML","shadowRoot","innerHTML","sanitize","styling","sheet","CSSStyleSheet","replaceSync","toString","adoptedStyleSheets","setupEventListener","addEventListener","handleClick","event","delegated","elem","target","closest","contains","publishCustomEvent","console","log","data","eventDetail","bubbles","composed","detail","publish","err","error","print","getHTML","document","getElementsByTagName","src","html","cloneNode","connectedCallback","registry","Map","set","key","value","get","clear","forEach","_","delete","PreviewResume","unsubscribe","disconnectedCallback","setDelegates","querySelector","subscribe","dialog","classList","close","window","getComputedStyle","x","getBoundingClientRect","left","right","y","top","bottom","handleClose","handleAppendResume","page","createElement","resumeStyle","newElem","append","parentNode","replaceChild","handleShowPreview","showModal","handlePreviewVisible","remove","handlePrintResume","setPrint","parser","content","cssRules","map","rule","cssText","join","iframe","style","display","body","appendChild","onload","contentWindow","removeChild","contentDocument","write","iframeSheet","defaultView","ShadowParser","fragment","createDocumentFragment","nodeMap","template","css","mediaCss","foundNode","walkNode","arrangeNode","applySheet","depth","rules","prependToSelectors","tagName","toLowerCase","push","childNodes","child","nodeType","styleSheet","styleSheets","addSheet","length","elTag","newNode","shell","DOMParser","parseFromString","firstChild","replaceWith","searchNode","hasAttribute","id","nodeId","crypto","randomUUID","substring","allCSS","filter","Boolean","finalCss","Object","keys","condition","replace","elementSelector","trimmedCss","trim","startsWith","mediaRegex","match","mediaCondition","innerRule","selectorsPart","rulesPart","split","modifiedInnerRule","selector","trimmedSelector"],"sourceRoot":""}