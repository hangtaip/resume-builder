{"version":3,"file":"9922.570e69443c143d61445a.chunk.js","mappings":"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","sources":["webpack://resume-builder/./src/components/menuBtn/menuBtn.js","webpack://resume-builder/./src/js/shadowParser.js"],"sourcesContent":["import DOMPurify from \"dompurify\";\nimport Listener from \"../../js/listener.js\";\nimport ShadowParser from \"../../js/shadowParser.js\";\nimport { registerCustomElement } from \"../../js/registerComponent.js\";\nimport styles from \"./menuBtn.shadow.scss\";\nimport { icon, library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\n\nexport default class MenuBtn extends HTMLElement {\n   constructor() {\n      super();\n      this.attachShadow({ mode: \"open\" });\n      this.listener;\n      library.add(faBars);\n   }\n   \n   render() {\n      const i = icon(faBars, {\n         classes: [\"fa-bars\", \"icon\"],\n      });\n\n      const dom = `\n         <div class=\"container\">\n            <button type=\"button\" title=\"dialog\">\n               ${i.node[0].outerHTML}\n            </button>\n         </div>\n      `;\n\n      this.shadowRoot.innerHTML = DOMPurify.sanitize(dom);\n   }\n\n   styling() {\n      const sheet = new CSSStyleSheet();\n      sheet.replaceSync(styles.toString());\n      this.shadowRoot.adoptedStyleSheets = [sheet];\n   }\n\n   setupEventListener() {\n      this.listener = new Listener(this);\n      this.addEventListener(\"click\", this.listener);\n   }\n\n   handleClick(event, delegated) {\n      const isDOM = delegated instanceof Listener;\n\n      if (isDOM) {\n         event.preventDefault();\n         const parser = new ShadowParser();\n         const node = document.querySelector('resume-home');\n         const dialog = parser.searchNode(node, 'tagName', 'dialog');\n         dialog.showModal();\n      } else {\n         console.log(\"external\");\n      }\n   }\n\n   connectedCallback() {\n      this.render();\n      this.styling();\n      this.setupEventListener();\n   }\n}\n\nregisterCustomElement(\"menu-btn\", MenuBtn);\n","export default class ShadowParser {\n  constructor() {\n    this.fragment = document.createDocumentFragment();\n    this.nodeMap = new Map();\n    this.template;\n    this.sheet = new CSSStyleSheet();\n    this.css = [];\n    this.mediaCss = {}; \n    this.foundNode;\n  }\n\n  cloneNode(node) {\n    this.template = document.createElement(\"template\");\n    this.walkNode(node);\n    this.arrangeNode(node);\n    this.applySheet();\n\n    return this.template.content;\n  }\n\n  walkNode(node, depth = 0) {\n    if (node.shadowRoot) {\n      const styleSheets = node.shadowRoot.adoptedStyleSheets;\n      styleSheets.forEach(sheet => {\n        const rules = [...sheet.cssRules].map(rule => {\n          return this.prependToSelectors(rule.cssText, node.tagName.toLowerCase());\n        }).join(\"\\n\");\n        this.css.push(rules);\n        // console.log(rules);\n      });\n      node.shadowRoot.childNodes.forEach((child) => {\n        if (node.dataset?.printDisable || child.dataset?.printDisable) {\n          return;\n        }\n        if (child.nodeType == 1) {\n          // const shell = new DOMParser().parseFromString(\n          //   node.outerHTML,\n          //   \"text/html\",\n          // ).body.firstChild;\n\n          if (child.tagName.toLowerCase() == \"style\") {\n            const styleSheet = node.shadowRoot.styleSheets;\n            // for <style> usage\n            this.nodeMap.set(`${node.tagName.toLowerCase()}-style`, styleSheet);\n            // for CSSStyleSheet usage - current\n            this.addSheet(node.tagName.toLowerCase(), styleSheet, depth);\n          } else if (!this.nodeMap.get(node.tagName.toLowerCase())) {\n            this.nodeMap.set(node.tagName.toLowerCase(), child);\n          }\n        }\n      });\n\n      this.walkNode(node.shadowRoot, depth + 1);\n    } else {\n      if (node.childNodes.length) {\n        node.childNodes.forEach((child) => {\n          this.walkNode(child, depth + 1);\n        });\n      }\n    }\n  }\n\n  arrangeNode(node) {\n    if (node.shadowRoot) {\n      node.shadowRoot.childNodes.forEach((child) => {\n        if (node.dataset?.printDisable || child.dataset?.printDisable) {\n          return;\n        }\n        if (child.nodeType == 1) {\n          if (child.tagName.toLowerCase() != \"style\") {\n            const elTag = node.tagName.toLowerCase();\n            const newNode = this.nodeMap.get(elTag);\n            // TODO: can be replaced with simple div -> move the nodeId here, add to our element, then pass to addSheet\n            const shell = new DOMParser().parseFromString(\n              node.outerHTML,\n              \"text/html\",\n            ).body.firstChild;\n\n            if (this.template.content.querySelector(elTag)) {\n              this.template.content\n                .querySelector(elTag)\n                .replaceWith(shell.cloneNode(true));\n              this.template.content\n                .querySelector(elTag)\n                .append(newNode.cloneNode(true));\n            } else {\n              this.template.content.append(shell.cloneNode(true));\n              this.template.content\n                .querySelector(elTag)\n                .append(newNode.cloneNode(true));\n            }\n          } else if (!this.nodeMap.get(node.tagName.toLowerCase())) {\n          }\n        }\n      });\n\n      this.arrangeNode(node.shadowRoot);\n    } else {\n      if (node.childNodes.length) {\n        node.childNodes.forEach((child) => {\n          // console.log('lightDom');\n          // console.log(child);\n          this.arrangeNode(child);\n        });\n      }\n    }\n  }\n\n  // TODO: use regex for (.#[])\n  searchNode(node, key, value) {\n    if (node.shadowRoot) {\n      node.shadowRoot.childNodes.forEach((child) => {\n        if (child.nodeType == 1) {\n          if (child.tagName.toLowerCase() != \"style\") {\n            switch (key) {\n              case \"attr\" || \"attribute\":\n                if (child.hasAttribute(value)) {\n                  this.foundNode = child;\n                }\n                break;\n              case \"class\":\n                if (child.classList.contains(value)) {\n                  this.foundNode = child;\n                }\n                break;\n              case \"dataset\":\n                if (child.dataset[value]) {\n                  this.foundNode = child;\n                }\n                break;\n              case \"id\":\n                if (child.id == value) {\n                  this.foundNode = child;\n                }\n                break;\n              case \"tagName\":\n                if (child.tagName.toLowerCase() == value.toLowerCase()) {\n                  this.foundNode = child;\n                }\n                break;\n            }\n          }\n        }\n      });\n\n      this.searchNode(node.shadowRoot, key, value);\n    } else {\n      if (node.childNodes.length) {\n        node.childNodes.forEach((child) => {\n          if (child.nodeType == 1) {\n            switch (key) {\n              case \"attr\" || \"attribute\":\n                if (child.hasAttribute(value)) {\n                  this.foundNode = child;\n                }\n                break;\n              case \"class\":\n                if (child.classList.contains(value)) {\n                  this.foundNode = child;\n                }\n                break;\n              case \"dataset\":\n                if (child.dataset[value]) {\n                  this.foundNode = child;\n                }\n                break;\n              case \"id\":\n                if (child.id == value) {\n                  this.foundNode = child;\n                }\n                break;\n              case \"tagName\":\n                if (child.tagName.toLowerCase() == value.toLowerCase()) {\n                  this.foundNode = child;\n                }\n                break;\n            }\n\n             this.searchNode(child, key, value);\n          }\n        });\n      }\n    }\n\n    return this.foundNode;\n  }\n\n  addSheet(tagName, style, depth) {\n    const nodeId = `${tagName}-${depth}-${crypto.randomUUID().substring(0, 8)}`;\n\n    const allCSS = [...style]\n      .map((styleSheet) => {\n        return [...styleSheet.cssRules].map((rule) => {\n          return `.${nodeId} ${rule.cssText}`;\n        });\n      })\n      .filter(Boolean)\n      .join(\"\\n\");\n\n    this.css.push(allCSS);\n    // const allCSS = [...style[0].cssRules].map((rule) => {\n    //     const newRule = `.${nodeId} ${rule.cssText}`;\n    //     return newRule;\n    //   })\n    //   .filter(Boolean)\n    //   .join('\\n');\n  }\n\n  // because we use CSSStyleSheet for our components and we reuse the tag, existing style will still apply\n  // TODO: for different design, we have to either:\n  // 1. use simple div -> attach nodeID -> apply style\n  // 2. create multiple stylesheet or scss file, import at our components\n  async applySheet() {\n    const baseCss = this.css.join(\"\\n\");\n    const mediaCss = Object.keys(this.mediaCss)\n                        .map(condition => {\n                          return `${condition} { ${this.mediaCss[condition]} }`;\n                        })\n                        .join(\"\\n\");\n    const finalCss = `${baseCss}\\n${mediaCss}`;\n    await this.sheet.replace(finalCss);\n    this.template.content.adoptedStyleSheets = [this.sheet];\n  }\n\n  prependToSelectors(cssText, elementSelector) {\n    const trimmedCss = cssText.trim();\n\n    if (trimmedCss.startsWith(\"@media\")) {\n      const mediaRegex = /(@media[^{]+)\\s*\\{([\\s\\S]*?)\\s*\\}/;\n      const match = trimmedCss.match(mediaRegex);\n\n      if (!match) {\n        return \"\";\n      }\n\n      const [, mediaCondition, innerRule] = match;\n\n      const [selectorsPart, rulesPart] = innerRule.trim().split(/\\s*{\\s*/);\n\n      const modifiedSelectors = selectorsPart\n        .split(/\\s*,\\s*/)\n        .map(selector => {\n            const trimmedSelector = selector.trim();\n            \n            if (trimmedSelector.startsWith(\".container\")) {\n              return `${elementSelector} > ${trimmedSelector}`;\n            } else {\n              return `${elementSelector} ${trimmedSelector}`;\n            }\n        })\n        .join(\", \");\n\n      const modifiedInnerRule = `${modifiedSelectors} { ${rulesPart} }`;\n\n      this.mediaCss[mediaCondition] = (this.mediaCss[mediaCondition] || \"\") + ` ${modifiedInnerRule}`;\n      // handle media queries here\n      // i have a this.mediaCss planned for this \n      return \"\";\n    }\n\n    const [selectorsPart, rulesPart] = cssText.split(/\\s*{\\s*/);\n\n    const selectors = selectorsPart.split(/\\s*,\\s*/)\n      .map(selector => {\n        if (selector.trim().startsWith(\".container\")) {\n          return `${elementSelector} > ${selector}`\n        } else {\n          return `${elementSelector} ${selector}`\n        }\n      })\n      .join(', ');\n\n    return `${selectors} { ${rulesPart}`;\n  }\n\n  // showPrint() {\n  //   const dialog = document.createElement('dialog');\n  //   dialog.style.height = '400px';\n  //   dialog.style.width = '800px';\n  //   document.body.append(dialog);\n  //   dialog.append(this.template.content);\n  //   // this.applySheet()\n  //   dialog.showModal();\n  // }\n}\n"],"names":["MenuBtn","HTMLElement","constructor","super","this","attachShadow","mode","listener","add","render","dom","classes","node","outerHTML","shadowRoot","innerHTML","sanitize","styling","sheet","CSSStyleSheet","replaceSync","toString","adoptedStyleSheets","setupEventListener","addEventListener","handleClick","event","delegated","preventDefault","parser","document","querySelector","searchNode","showModal","console","log","connectedCallback","ShadowParser","fragment","createDocumentFragment","nodeMap","Map","template","css","mediaCss","foundNode","cloneNode","createElement","walkNode","arrangeNode","applySheet","content","depth","forEach","rules","cssRules","map","rule","prependToSelectors","cssText","tagName","toLowerCase","join","push","childNodes","child","dataset","printDisable","nodeType","styleSheet","styleSheets","set","addSheet","get","length","elTag","newNode","shell","DOMParser","parseFromString","body","firstChild","replaceWith","append","key","value","hasAttribute","classList","contains","id","style","nodeId","crypto","randomUUID","substring","allCSS","filter","Boolean","finalCss","Object","keys","condition","replace","elementSelector","trimmedCss","trim","startsWith","mediaRegex","match","mediaCondition","innerRule","selectorsPart","rulesPart","split","modifiedInnerRule","selector","trimmedSelector"],"sourceRoot":""}