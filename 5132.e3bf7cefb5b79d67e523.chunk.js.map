{"version":3,"file":"5132.e3bf7cefb5b79d67e523.chunk.js","mappings":"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","sources":["webpack://resume-builder/./src/js/objectRegistry.js","webpack://resume-builder/./src/components/formPersonal/formPersonal.js"],"sourcesContent":["class ObjectRegistry {\n  constructor() {\n    this.registry = new Map();\n  }\n\n  set(key, value) {\n    this.registry.set(key, value);\n  }\n\n  get(key) {\n    return this.registry.get(key);\n  }\n\n  clear() {\n    this.registry.forEach((_, key) => this.registry.delete(key));\n  }\n}\n\nexport default new ObjectRegistry();\n","import DOMPurify from \"dompurify\";\nimport Listener from \"../../js/listener.js\";\nimport { registerCustomElement } from \"../../js/registerComponent\";\nimport styles from \"./formPersonal.shadow.scss\";\nimport { icon, library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faImage, faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { registry } from \"../../js/functionRegistry.js\";\nimport eventManager from \"../../js/eventManager.js\";\nimport objectRegistry from \"../../js/objectRegistry.js\";\n\nexport default class FormPersonal extends HTMLElement {\n  constructor() {\n    super();\n    this.attachShadow({ mode: \"open\" });\n    this.state = new Map();\n    this.listener;\n    this.customEventData = {\n      await: false,\n      awaitDetail() {\n        return 0;\n      },\n      eventName: \"handleCustomEvent\",\n      details: \"\",\n    };\n    this.unsubscribe;\n    library.add(faImage, faPlus);\n  }\n\n  async connectedCallback() {\n    await this.render();\n    this.setValueRequestDetail();\n    this.publishCustomEvent(this.customEventData);\n    this.styling();\n    this.setupEventListener();\n  }\n\n  disconnectedCallback() {\n    this.unsubscribe();\n  }\n\n  async render() {\n    const dom = `\n         <div class=\"container\">\n            <fieldset>\n               <legend>Personal Details</legend>\n               <div class=\"view\">\n                 ${this.customInput()} \n               </div>\n            </fieldset>\n         </div>\n         `;\n\n    this.shadowRoot.innerHTML = DOMPurify.sanitize(dom);\n    await new Promise((resolve) => setTimeout(resolve, 0));\n  }\n\n  customInput() {\n    const image = icon(faImage, {\n      classes: [\"fa-image\", \"icon\"],\n    });\n\n    const plus = icon(faPlus, {\n      classes: [\"fa-plus\", \"icon\"],\n    });\n\n    return `\n      <custom-input \n         title=\"Name\" \n         data-title='[\"Name\"]' \n         data-attr='[\"name\"]'\n         data-placeholder='[\"Ali\"]' \n         data-id='[\"hf_name\"]'\n         data-width='[\"20\"]'\n      />\n         <label for=\"hf_name\" slot=\"label_0\">Name</label>\n      </custom-input> \n      <custom-input \n         title=\"Title\" \n         data-title='[\"Title\"]' \n         data-attr='[\"title\"]'\n         data-placeholder='[\"Waiter\"]' \n         data-id='[\"hf_title\"]'\n         data-width='[\"20\"]'\n      />\n         <label for=\"hf_title\" slot=\"label_0\">Title</label>\n      </custom-input>\n      <custom-input \n         title=\"email\" \n         data-title='[\"email\"]' \n         data-attr='[\"email\"]'\n         data-placeholder='[\"ali@emailProvider.com\"]' \n         data-id='[\"hf_email\"]'\n         data-width='[\"20\"]'\n      />\n         <label for=\"hf_email\" slot=\"label_0\">Email</label>\n      </custom-input>\n      <custom-input \n         title=\"github\" \n         data-title='[\"github\"]' \n         data-attr='[\"github\"]'\n         data-placeholder='[\"https://github.com/ali\"]' \n         data-id='[\"hf_github\"]'\n         data-width='[\"20\"]'\n      />\n         <label for=\"hf_github\" slot=\"label_0\">Github</label>\n      </custom-input>\n      <custom-input \n         title=\"yob\" \n         data-title='[\"yob\"]' \n         data-attr='[\"yob\"]'\n         data-placeholder='[\"1993\"]' \n         data-id='[\"hf_yob\"]'\n         data-width='[\"20\"]'\n      />\n         <label for=\"hf_yob\" slot=\"label_0\">Year Of Birth</label>\n      </custom-input>\n      <custom-input \n         title=\"tel\" \n         data-title='[\"tel\"]' \n         data-attr='[\"tel\"]'\n         data-placeholder='[\"012-345-6789/012-3456-7890\"]' \n         data-id='[\"hf_tel\"]'\n         data-width='[\"20\"]'\n      />\n         <label for=\"hf_tel\" slot=\"label_0\">Telephone</label>\n      </custom-input>\n      <custom-input \n         title=\"country_code\" \n         data-title='[\"country_code\"]' \n         data-attr='[\"country_code\"]'\n         data-placeholder='[\"my\"]' \n         data-id='[\"hf_country_code\"]'\n         data-width='[\"20\"]'\n      />\n         <label for=\"hf_country_code\" slot=\"label_0\">Country Code</label>\n      </custom-input>\n      <custom-input \n         title=\"location\" \n         data-title='[\"location\"]' \n         data-attr='[\"location\"]'\n         data-placeholder='[\"Malaysia\"]' \n         data-id='[\"hf_location\"]'\n         data-width='[\"20\"]'\n      />\n         <label for=\"hf_location\" slot=\"label_0\">Location</label>\n      </custom-input>\n      <custom-input \n         title=\"objective\" \n         data-title='[\"objective\"]' \n         data-attr='[\"seek\"]'\n         data-placeholder='[\"Manager\"]' \n         data-id='[\"hf_seek\"]'\n         data-width='[\"20\"]'\n      />\n         <label for=\"hf_seek\" slot=\"label_0\">Position Applied</label>\n      </custom-input>\n      <custom-input \n         title=\"Motto\" \n         data-title='[\"Motto\"]' \n         data-attr='[\"motto\"]'\n         data-placeholder='[\"To live is to serve!\"]' \n         data-id='[\"hf_motto\"]'\n         data-width='[\"20\"]'\n      />\n         <label for=\"hf_motto\" slot=\"label_0\">Motto</label>\n      </custom-input> \n      <pimage>\n        <custom-input\n          title=\"image\"\n          class=\"upload-img dropable\"\n          data-attr='[\"image\"]'\n          data-class='[\"hidden changeable upload-img\"]'\n          data-title='[\"image\"]'\n          data-input-type='[\"file\"]'\n          data-id='[\"hf_image\"]'\n        />\n          <div class=\"img_block\">\n             <div class=\"img_add_block\">${plus.node[0].outerHTML}</div>\n             <loading-block></loading-block>\n             <img alt=\"upload image\" src=\"https://placehold.co/600x400\" class=\"img-uploaded\">\n          </div>\n          <button type=\"button\" class=\"clickable upload-btn\" title=\"Upload Image\">${image.node[0].outerHTML}</button>\n         <label for=\"hf_image\" slot=\"label_0\">Image</label>\n        </custom-input>\n      </pimage>   \n    `;\n  }\n\n  styling() {\n    const sheet = new CSSStyleSheet();\n    sheet.replaceSync(styles.toString());\n    this.shadowRoot.adoptedStyleSheets = [sheet];\n  }\n\n  setupEventListener() {\n    this.listener = new Listener(this);\n    this.listener.setDelegates(this);\n    this.listener.setDelegates(this.shadowRoot.querySelector(\".upload-btn\"));\n    this.shadowRoot.addEventListener(\"click\", this.listener);\n    // this.shadowRoot.querySelector(\".upload-img\").dataset.event=`${this.generateUploadEvent()}`;\n    this.shadowRoot.querySelector(\".upload-img\").dataset.event =\n      `${this.generateEvents()}`;\n    // document.addEventListener(\"importDataLoaded\", this.listener);\n    this.unsubscribe = eventManager.subscribe(\n      \"importDataLoaded\",\n      this.listener,\n    );\n  }\n\n  handleClick(event, delegated) {\n    const isDOM = delegated instanceof Listener;\n\n    if (isDOM) {\n      let elem = event.target.closest(\".clickable\");\n\n      if (!elem) return;\n      if (!this.shadowRoot.contains(elem)) return;\n\n      switch (true) {\n        case elem.classList.contains(\"upload-btn\"):\n          this.shadowRoot\n            .querySelector(\".upload-img\")\n            .shadowRoot.querySelector(\".upload-img\")\n            .click();\n          break;\n      }\n    } else {\n      console.log(\"external\");\n    }\n  }\n\n  handleImportDataLoaded(event, delegated) {\n    const isDOM = delegated instanceof Listener;\n\n    if (isDOM) {\n      let elem = this.shadowRoot.querySelector(\".view\");\n\n      if (!elem) return;\n      if (!this.shadowRoot.contains(elem)) return;\n\n      Array.from(elem.querySelectorAll(\"custom-input\")).forEach((elem) => {\n        const key = JSON.parse(elem.dataset.attr)[0];\n        elem.dataset.values =\n          `{ \"${key}\": \"${event.detail.data.owner[key]}\"}` || \"\";\n\n        if (key == \"image\") {\n          this.shadowRoot.querySelector(\"img\").src =\n            event.detail.data.owner[key] || \"https://placehold.co/600x400\";\n        }\n      });\n\n      this.importComplete();\n\n      this.setValueRequestDetail();\n      this.publishCustomEvent(this.customEventData);\n    } else {\n      console.log(\"external\");\n    }\n  }\n\n  importComplete() {\n    if (objectRegistry.registry.has(\"formLoaded\")) {\n      const readyCnt = objectRegistry.get(\"formLoaded\").get(\"readyCnt\") + 1;\n      const formCnt = objectRegistry.get(\"formLoaded\").get(\"formCnt\");\n      objectRegistry.get(\"formLoaded\").set(\"readyCnt\", readyCnt);\n\n      if (readyCnt == formCnt) {\n        this.customEventData.await = false;\n        this.customEventData.awaitDetail = () => {\n          return 0;\n        };\n        this.customEventData.eventName = \"stopLoading\";\n        this.customEventData.details = {};\n        this.publishCustomEvent(this.customEventData);\n      }\n    } else {\n      // TODO: create a log for debug\n      console.warn(\n        `${this.constructor.name}: Please set default state for form before dispatch importDataLoaded event.`,\n      );\n    }\n  }\n\n  generateEvents() {\n    return JSON.stringify(\n      Object.assign(\n        this.generateDropEvent(),\n        this.generateUploadEvent(),\n        this.generateDragoverEvent(),\n        this.generateDragleaveEvent(),\n      ),\n    );\n  }\n\n  generateUploadEvent() {\n    registry.register(\"change\", \"uploadEvent\", function (event, delegated) {\n      const isDOM = delegated instanceof Listener;\n\n      if (isDOM) {\n        let elem = event.target.closest(\".changeable\");\n\n        if (!elem) return;\n        if (!this.shadowRoot.contains(elem)) return;\n\n        switch (true) {\n          case elem.classList.contains(\"upload-img\"):\n            let reader;\n\n            if (elem.files && elem.files[0]) {\n              reader = new FileReader();\n\n              this.querySelector(\"loading-block\").classList.add(\"visible\");\n              reader.onload = (e) => {\n                this.querySelector(\"loading-block\").classList.remove(\"visible\");\n                const otherSlot = this.shadowRoot\n                  .querySelector(\"slot[class=other]\")\n                  .assignedElements();\n                const img = otherSlot.find((elem) =>\n                  elem.classList.contains(\"img_block\"),\n                );\n                img.style.backgroundImage = e.target.result;\n                this.closest(\"pimage\").querySelector(\"img\").src =\n                  e.target.result;\n              };\n              reader.readAsDataURL(elem.files[0]);\n            }\n            break;\n        }\n      }\n    });\n\n    const obj = {\n      upload: {\n        event: \"change\",\n        name: \"uploadEvent\",\n        \"switch-key\": \"upload-image\",\n        target: `this.shadowRoot.querySelector(\".upload-img\")`,\n        context: `this.shadowRoot.querySelector(\".upload-img\")`,\n      },\n    };\n    // return JSON.stringify(obj);\n    return obj;\n  }\n\n  generateDropEvent() {\n    registry.register(\"drop\", \"dropEvent\", function (event, delegated) {\n      const isDOM = delegated instanceof Listener;\n\n      if (isDOM) {\n        event.preventDefault();\n        let elem = event.target.closest(\".dropable\");\n\n        if (!elem) return;\n        if (!this.contains(elem)) return;\n\n        switch (true) {\n          case elem.classList.contains(\"upload-img\"):\n            let reader;\n\n            if (event.dataTransfer.items) {\n              [...event.dataTransfer.items].forEach((item, i) => {\n                reader = new FileReader();\n                if (item.kind === \"file\") {\n                  const file = item.getAsFile();\n                  this.querySelector(\".img_add_block\").classList.remove(\n                    \"visible\",\n                  );\n                  this.querySelector(\"loading-block\").classList.add(\"visible\");\n\n                  reader.onload = (e) => {\n                    this.closest(\"pimage\").querySelector(\"img\").src =\n                      e.target.result;\n\n                    this.querySelector(\"loading-block\").classList.remove(\n                      \"visible\",\n                    );\n                  };\n                  reader.readAsDataURL(file);\n\n                  // console.log(`...file[${i}].name = ${file.name}`);\n                }\n              });\n            } else {\n              [...event.dataTransfer.files].forEach((file, i) => {\n                this.querySelector(\".img_add_block\").classList.remove(\n                  \"visible\",\n                );\n                this.querySelector(\"loading-block\").classList.add(\"visible\");\n                reader.onload = (e) => {\n                  this.closest(\"pimage\").querySelector(\"img\").src =\n                    e.target.result;\n                  this.querySelector(\"loading-block\").classList.remove(\n                    \"visible\",\n                  );\n                };\n                reader.readAsDataURL(file);\n                // console.log(`... file[${i}].name = ${file.name}`);\n              });\n            }\n\n            break;\n        }\n      }\n    });\n\n    const obj = {\n      drop: {\n        event: \"drop\",\n        name: \"dropEvent\",\n        \"switch-key\": \"upload-image\",\n        target: `this.shadowRoot.querySelector(\".upload-img\")`,\n        context: `this`,\n      },\n    };\n\n    // return JSON.stringify(obj);\n    return obj;\n  }\n\n  generateDragoverEvent() {\n    registry.register(\"dragover\", \"dragoverEvent\", function (event, delegated) {\n      const isDOM = delegated instanceof Listener;\n\n      if (isDOM) {\n        let elem = event.target.closest(\".dropable\");\n\n        if (!elem) return;\n        if (!this.contains(elem)) return;\n\n        this.querySelector(\".img_add_block\").classList.add(\"visible\");\n\n        event.preventDefault();\n        // switch (true) {\n        //   case elem.classList.contains(\"upload-img\"):\n        //     event.preventDefault();\n        //     break;\n        // }\n      }\n    });\n\n    const obj = {\n      dragover: {\n        event: \"dragover\",\n        name: \"dragoverEvent\",\n        \"switch-key\": \"upload-image\",\n        target: `this.shadowRoot.querySelector(\".upload-img\")`,\n        context: `this`,\n      },\n    };\n\n    // return JSON.stringify(obj);\n    return obj;\n  }\n\n  generateDragleaveEvent() {\n    registry.register(\n      \"dragleave\",\n      \"dragleaveEvent\",\n      function (event, delegated) {\n        const isDOM = delegated instanceof Listener;\n\n        if (isDOM) {\n          let elem = event.target.closest(\".dropable\");\n\n          if (!elem) return;\n          if (!this.contains(elem)) return;\n\n          this.querySelector(\".img_add_block\").classList.remove(\"visible\");\n\n          event.preventDefault();\n        }\n      },\n    );\n\n    const obj = {\n      dragleave: {\n        event: \"dragleave\",\n        name: \"dragleaveEvent\",\n        \"switch-key\": \"upload-image\",\n        target: `this.shadowRoot.querySelector(\".upload-img\")`,\n        context: `this`,\n      },\n    };\n\n    // return JSON.stringify(obj);\n    return obj;\n  }\n\n  setValueRequestDetail() {\n    this.customEventData.await = false;\n    this.customEventData.eventName = \"valueRequest\";\n    this.customEventData.details = {\n      [this.tagName.toLowerCase()]:\n        this.shadowRoot.querySelectorAll(\"custom-input\"),\n    };\n  }\n\n  async publishCustomEvent(data) {\n    try {\n      if (data.await) {\n        await data.awaitDetail();\n      }\n\n      const eventDetail = {\n        bubbles: true,\n        composed: true,\n        detail: data.details,\n      };\n\n      eventManager.publish(data.eventName, eventDetail);\n    } catch (err) {\n      console.error(`Failed to publish ${data.eventName} : ${err}`);\n    }\n  }\n}\n\nregisterCustomElement(\"form-personal\", FormPersonal);\n"],"names":["constructor","this","registry","Map","set","key","value","get","clear","forEach","_","delete","FormPersonal","HTMLElement","super","attachShadow","mode","state","listener","customEventData","await","awaitDetail","eventName","details","unsubscribe","add","connectedCallback","render","setValueRequestDetail","publishCustomEvent","styling","setupEventListener","disconnectedCallback","dom","customInput","shadowRoot","innerHTML","sanitize","Promise","resolve","setTimeout","image","classes","node","outerHTML","sheet","CSSStyleSheet","replaceSync","toString","adoptedStyleSheets","setDelegates","querySelector","addEventListener","dataset","event","generateEvents","subscribe","handleClick","delegated","elem","target","closest","contains","classList","click","console","log","handleImportDataLoaded","Array","from","querySelectorAll","JSON","parse","attr","values","detail","data","owner","src","importComplete","has","readyCnt","formCnt","warn","name","stringify","Object","assign","generateDropEvent","generateUploadEvent","generateDragoverEvent","generateDragleaveEvent","register","reader","files","FileReader","onload","e","remove","img","assignedElements","find","style","backgroundImage","result","readAsDataURL","upload","context","preventDefault","dataTransfer","items","item","i","kind","file","getAsFile","drop","dragover","dragleave","tagName","toLowerCase","eventDetail","bubbles","composed","publish","err","error"],"sourceRoot":""}