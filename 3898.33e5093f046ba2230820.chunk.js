"use strict";(self.webpackChunkresume_builder=self.webpackChunkresume_builder||[]).push([[3898,7888],{3898:(t,e,a)=>{a.r(e),a.d(e,{default:()=>n});var s=a(8404),r=a(2616),i=a(6854),o=a(7888);class n extends HTMLElement{static observedAttributes=["data-values"];constructor(){super(),this.attachShadow({mode:"open"}),this.listener,this.dataID=JSON.parse(this.dataset.id||"[]"),this.inputCount=this.dataID.length||"1",this.placeHolder=JSON.parse(this.dataset.placeholder||'["Enter text"]'),this.title=this.getAttribute("title")||["Custom Input"],this.dataAttr=JSON.parse(this.dataset.attr||"{}"),this.dataFormGroupItem=JSON.parse(this.dataset.formGroupItem||"{}"),this.dataClass=JSON.parse(this.dataset.class||"{}"),this.dataTitle=JSON.parse(this.dataset.title||'["field"]'),this.dataValues=JSON.parse(this.dataset.values||"{}")}async render(){const t=`\n         <div class="container">\n            <div class="form-group">\n            ${Array.from({length:this.inputCount},(t,e)=>`\n               <div class="form-group-item ${this.dataFormGroupItem.length>0?` ${this.dataFormGroupItem[e]}`:""}">\n                  <slot name="label_${e}"></slot>\n                  <textarea\n                     title="${this.dataTitle[e]}"\n                     ${this.dataClass.length>0?`class="${this.dataClass[e]}"`:""}\n                     ${this.dataID.length>0?`id="${this.dataID[e]}"`:""}\n                     ${this.dataAttr.length>0?`data-attr="${this.dataAttr[e]}"`:""}\n                  ></textarea>\n               </div>\n               `).join("")}\n            </div>\n            <slot class="other"></slot>\n         </div>\n         `;if(this.shadowRoot.innerHTML=s.A.sanitize(t),this.dataValues.length>0){const t=this.shadowRoot.querySelector("textarea");this.dataValues.map((e,a)=>{if(0==a)return t.value=`- ${e}`;t.value=`${t.value}\n- ${e}`})}await new Promise(t=>setTimeout(t,0))}styling(){const t=new CSSStyleSheet;t.replaceSync(o.default.toString()),this.shadowRoot.adoptedStyleSheets=[t]}setupEventListener(){}handleClick(t,e){e instanceof r.A?(t.preventDefault(),this.event()):console.log("external")}event(){console.log("event")}async connectedCallback(){await this.render(),this.styling(),this.setupEventListener()}attributeChangedCallback(t,e,a){if("data-values"===t){const t=JSON.parse(a||"{}");let e;e=this.shadowRoot.querySelector("textarea"),e&&t.map((t,e)=>{if(0==e)return this.shadowRoot.querySelector("textarea").value=`- ${t}`;this.shadowRoot.querySelector("textarea").value=`${this.shadowRoot.querySelector("textarea").value}\n- ${t}`})}}}(0,i.Dp)("custom-textarea",n)},7888:(t,e,a)=>{a.r(e),a.d(e,{default:()=>s});const s='*,*::before,*::after{box-sizing:border-box;scrollbar-width:thin}button{background:#fff;color:hsl(0,0%,-4999999.999999999%);border-radius:.25rem;padding:.5rem;padding-inline:.5rem;border-width:0;transition:color .3s ease-out}button:hover{cursor:pointer;background:#d3d3d3;color:hsl(0,0%,-3274509.803921567%);border-radius:0;transition:.3s ease-in}input:not([type=text]){cursor:pointer}.icon{height:.7rem;width:.7rem}button:has(.icon){display:flex;border-width:0;border-radius:.5rem;padding:0}legend{font-size:2ch;font-weight:bold}.hidden{display:none}.container{height:auto;width:auto;background-color:rgba(0,0,0,0);font-family:"Georgia","serif";font-size:1.6ch;word-spacing:.8ch;display:flex;flex-flow:row nowrap;align-items:flex-start;gap:.25rem}.container textarea{flex:3 100%;padding:.25rem;border:1px solid hsl(240,54%,94%);border-radius:.25rem;field-sizing:content}.container .form-group{display:flex;flex-flow:row wrap;flex:1;gap:.25rem}.container .form-group-item{display:flex;flex-flow:row wrap;flex:1}.container .form-group-item.flex-0{flex:0}'}}]);
//# sourceMappingURL=3898.33e5093f046ba2230820.chunk.js.map