{"version":3,"file":"5460.5e5e3c4c048e35e4723e.chunk.js","mappings":"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","sources":["webpack://resume-builder/./src/js/objectRegistry.js","webpack://resume-builder/./src/components/formEducation/formEducation.js"],"sourcesContent":["class ObjectRegistry {\n  constructor() {\n    this.registry = new Map();\n  }\n\n  set(key, value) {\n    this.registry.set(key, value);\n  }\n\n  get(key) {\n    return this.registry.get(key);\n  }\n\n  clear() {\n    this.registry.forEach((_, key) => this.registry.delete(key));\n  }\n}\n\nexport default new ObjectRegistry();\n","import DOMPurify from \"dompurify\";\nimport Listener from \"../../js/listener.js\";\nimport { registerCustomElement } from \"../../js/registerComponent\";\nimport styles from \"./formEducation.shadow.scss\";\nimport { icon, library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faRectangleXmark } from \"@fortawesome/free-solid-svg-icons\";\nimport yaml from \"../../data/data.yaml\";\nimport eventManager from \"../../js/eventManager.js\";\nimport objectRegistry from \"../../js/objectRegistry.js\";\n\nexport default class FormEducation extends HTMLElement {\n  constructor() {\n    super();\n    this.attachShadow({ mode: \"open\" });\n    this.listener;\n    this.customEventData = {\n      await: false,\n      awaitDetail() { return 0 },\n      eventName: \"handleCustomEvent\",\n      details: \"\",\n    };\n    this.unsubscribe;\n    library.add(faRectangleXmark);\n  }\n\n  render() {\n    const dom = `\n         <div class=\"container\">\n            <fieldset>\n               <legend>Education</legend>\n               <div class=\"view\">\n                 <button type=\"button\" class=\"clickable add-btn\" title=\"Add education\">Add</button>\n                 ${this.customInput()} \n               </div>\n            </fieldset>\n         </div>\n         `;\n\n    this.shadowRoot.innerHTML = DOMPurify.sanitize(dom);\n  }\n\n  styling() {\n    const sheet = new CSSStyleSheet();\n    sheet.replaceSync(styles.toString());\n    this.shadowRoot.adoptedStyleSheets = [sheet];\n  }\n\n  setupEventListener() {\n    this.listener = new Listener(this);\n    this.listener.setDelegates(this);\n    this.listener.setDelegates(this.shadowRoot.querySelector(\".add-btn\"));\n    this.shadowRoot.addEventListener(\"click\", this.listener);\n    this.shadowRoot.addEventListener(\"transitionend\", this.listener);\n    // this.shadowRoot.addEventListener(\"input\", this.listener);\n    this.unsubscribe = eventManager.subscribe(\n      \"importDataLoaded\",\n      this.listener,\n    );\n  }\n\n  handleClick(event, delegated) {\n    const isDOM = delegated instanceof Listener;\n\n    if (isDOM) {\n      let elem = event.target.closest(\".clickable\");\n\n      if (!elem) return;\n      if (!this.shadowRoot.contains(elem)) return;\n\n      switch (true) {\n        case elem.classList.contains(\"add-btn\"):\n          const dom = this.customInput();\n          const newEdu = new DOMParser()\n            .parseFromString(DOMPurify.sanitize(dom), \"text/html\")\n            .body.querySelector(\"custom-input\");\n\n          this.shadowRoot.querySelector(\"fieldset .view\").append(newEdu);\n          this.setValueRequestDetail();\n          this.publishCustomEvent(this.customEventData);\n\n          break;\n        case elem.classList.contains(\"delete-btn\"):\n          if (this.shadowRoot.querySelectorAll(\"custom-input\").length > 1) {\n            elem.closest(\"custom-input\").classList.add(\"removing\");\n\n            // TODO: create event once instead of every click\n            // elem.closest(\"custom-input\").addEventListener(\"transitionend\", () => {\n            //   elem.closest(\"custom-input\").remove();\n            // }, { once: true });\n          }\n          // this.shadowRoot.querySelectorAll(\"custom-input\").length <= 1\n          //   || elem.closest(\"custom-input\").remove();\n          break;\n      }\n    } else {\n      console.log(\"external\");\n    }\n  }\n\n  handleTransitionend(event, delegated) {\n    const isDOM = delegated instanceof Listener;\n\n    if (isDOM) {\n      let elem = event.target.closest(\".transitionable\");\n\n      if (!elem) return;\n      if (!this.shadowRoot.contains(elem)) return;\n\n      switch (true) {\n        case elem.tagName.toLowerCase() == \"custom-input\":\n          if (elem.classList.contains(\"removing\")) {\n            elem.remove();\n            this.setValueRequestDetail();\n            this.publishCustomEvent(this.customEventData);\n          }\n          break;\n      }\n    } else {\n      console.log(\"external\");\n    }\n  }\n\n  handleImportDataLoaded(event, delegated) {\n    const isDOM = delegated instanceof Listener;\n\n    if (isDOM) {\n      let elem = this.shadowRoot.querySelector(\".view\");\n\n      if (!elem) return;\n      if (!this.shadowRoot.contains(elem)) return;\n\n      let inputs = \"\";\n      const existingInputs = this.shadowRoot.querySelectorAll(\"custom-input\");\n\n      // TODO: handle null\n      Object.values(event.detail.data.owner.edu).forEach((edu, i) => {\n        // inputs += this.customInput(`[\"${skill.name}\",\"${skill.color}\"]`);\n        if (existingInputs[i]) {\n          return (this.shadowRoot.querySelector(\"custom-input\").dataset.values =\n            JSON.stringify(edu));\n        }\n        inputs += this.customInput(edu);\n      });\n      const input = new DOMParser().parseFromString(inputs, \"text/html\");\n      const fragments = new DocumentFragment();\n      while (input.body.firstChild) {\n        fragments.append(input.body.firstChild);\n      }\n\n      this.shadowRoot.querySelector(\".view\").append(fragments);\n\n      this.importComplete();\n\n      this.setValueRequestDetail();\n      this.publishCustomEvent(this.customEventData);\n    } else {\n      console.log(\"external\");\n    }\n  }\n\n  importComplete() {\n    if (objectRegistry.registry.has(\"formLoaded\")) {\n      const readyCnt = objectRegistry.get(\"formLoaded\").get(\"readyCnt\") + 1;\n      const formCnt = objectRegistry.get(\"formLoaded\").get(\"formCnt\");\n      objectRegistry.get(\"formLoaded\").set(\"readyCnt\", readyCnt); \n\n      if (readyCnt == formCnt) {\n        this.customEventData.await = false;\n        this.customEventData.awaitDetail = () => {\n          return 0;\n        };\n        this.customEventData.eventName = \"stopLoading\";\n        this.customEventData.details = {};\n        this.publishCustomEvent(this.customEventData);\n      }\n    } else {\n      console.warn(`${this.constructor.name}: Please set default state for formLoaded before dispatch importDataLoaded event.`);\n    }\n  }\n\n  testDataInsert() {\n    let inputs = \"\";\n    const existingInputs = this.shadowRoot.querySelectorAll(\"custom-input\");\n\n    Object.values(yaml.owner.edu).forEach((edu, i) => {\n      if (existingInputs[i]) {\n        return (this.shadowRoot.querySelector(\"custom-input\").dataset.values =\n          JSON.stringify(edu));\n      }\n      inputs += this.customInput(edu);\n    });\n    const input = new DOMParser().parseFromString(inputs, \"text/html\");\n    const fragments = new DocumentFragment();\n    while (input.body.firstChild) {\n      fragments.append(input.body.firstChild);\n    }\n\n    this.shadowRoot.querySelector(\".view\").append(fragments);\n  }\n\n  customInput(data = \"\") {\n    const xMark = icon(faRectangleXmark, {\n      classes: [\"fa-xMark\", \"icon\"],\n    });\n\n    return `\n      <custom-input \n        title=\"edu\" \n        class=\"transitionable\"\n        data-title='[\"field\", \"uni\"]' \n        ${Object.entries(data).length > 1 ? `data-values='${JSON.stringify(data)}'` : \"\"}\n        data-attr='[\"field\", \"alma\"]'\n        data-placeholder='[\"Certificate in Housemanship\", \"ABC College\"]' \n        data-id='[\"hf_edu_field\", \"hf_edu_uni\"]'\n        data-width='[\"20\",\"20\"]'\n     />\n        <label for=\"hf_edu_field\" slot=\"label_0\">Field</label>\n        <label for=\"hf_edu_uni\" slot=\"label_1\">Institute</label>\n        <button class=\"clickable delete-btn\" type=\"button\" title=\"Remove education\">${xMark.node[0].outerHTML}</button> \n     </custom-input>\n    `;\n  }\n\n  setValueRequestDetail() {\n    this.customEventData.await = false;\n    this.customEventData.eventName = \"valueRequest\";\n    this.customEventData.details = { \"form-education\": this.shadowRoot.querySelectorAll(\"custom-input\") }\n  }\n\n  async publishCustomEvent(data) {\n    try {\n      if (data.await) {\n        await data.awaitDetail();\n      }\n\n      const eventDetail = {\n        bubbles: true,\n        composed: true,\n        detail: data.details,\n      };\n\n      eventManager.publish(data.eventName, eventDetail);\n    } catch (err) {\n      console.error(`Failed to publish ${data.eventName} : ${err}`);\n    }\n  }\n\n  connectedCallback() {\n    this.render();\n    this.setValueRequestDetail();\n    this.publishCustomEvent(this.customEventData);\n    this.styling();\n    this.setupEventListener();\n    // this.testDataInsert();\n  }\n\n  disconnectedCallback() {\n    this.unsubscribe();\n  }\n}\n\nregisterCustomElement(\"form-education\", FormEducation);\n"],"names":["constructor","this","registry","Map","set","key","value","get","clear","forEach","_","delete","FormEducation","HTMLElement","super","attachShadow","mode","listener","customEventData","await","awaitDetail","eventName","details","unsubscribe","add","render","dom","customInput","shadowRoot","innerHTML","sanitize","styling","sheet","CSSStyleSheet","replaceSync","toString","adoptedStyleSheets","setupEventListener","setDelegates","querySelector","addEventListener","eventManager","subscribe","handleClick","event","delegated","elem","target","closest","contains","classList","newEdu","DOMParser","parseFromString","body","append","setValueRequestDetail","publishCustomEvent","querySelectorAll","length","console","log","handleTransitionend","tagName","toLowerCase","remove","handleImportDataLoaded","inputs","existingInputs","Object","values","detail","data","owner","edu","i","dataset","JSON","stringify","input","fragments","DocumentFragment","firstChild","importComplete","objectRegistry","has","readyCnt","formCnt","warn","name","testDataInsert","xMark","classes","entries","node","outerHTML","eventDetail","bubbles","composed","publish","err","error","connectedCallback","disconnectedCallback"],"sourceRoot":""}