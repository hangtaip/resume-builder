{"version":3,"file":"3898.8475bf551431d34756c8.chunk.js","mappings":"+LAKe,MAAMA,UAAuBC,YACzCC,0BAA4B,CAAC,eAC7B,WAAAC,GACGC,QACAC,KAAKC,aAAa,CAAEC,KAAM,SAC1BF,KAAKG,SACLH,KAAKI,OAASC,KAAKC,MAAMN,KAAKO,QAAQC,IAAM,MAC5CR,KAAKS,WAAaT,KAAKI,OAAOM,QAAU,IACxCV,KAAKW,YAAcN,KAAKC,MAAMN,KAAKO,QAAQK,aAAe,kBAC1DZ,KAAKa,MAAQb,KAAKc,aAAa,UAAY,CAAC,gBAC5Cd,KAAKe,SAAWV,KAAKC,MAAMN,KAAKO,QAAQS,MAAQ,MAChDhB,KAAKiB,kBAAoBZ,KAAKC,MAAMN,KAAKO,QAAQW,eAAiB,MAClElB,KAAKmB,UAAYd,KAAKC,MAAMN,KAAKO,QAAQa,OAAS,MAClDpB,KAAKqB,UAAYhB,KAAKC,MAAMN,KAAKO,QAAQM,OAAS,aAClDb,KAAKsB,WAAajB,KAAKC,MAAMN,KAAKO,QAAQgB,QAAU,KACvD,CAEA,YAAMC,GACH,MAAMC,EAAM,yFAGJC,MAAMC,KAAK,CAACjB,OAAQV,KAAKS,YAAa,CAACmB,EAAGC,IAClC,gDACuB7B,KAAKiB,kBAAkBP,OAAS,EAAI,IAAIV,KAAKiB,kBAAkBY,KAAO,6CAC7EA,wEAER7B,KAAKqB,UAAUQ,6BACtB7B,KAAKmB,UAAUT,OAAS,EAAI,UAAUV,KAAKmB,UAAUU,MAAQ,4BAC7D7B,KAAKI,OAAOM,OAAS,EAAI,OAAOV,KAAKI,OAAOyB,MAAQ,4BACpD7B,KAAKe,SAASL,OAAS,EAAI,cAAcV,KAAKe,SAASc,MAAQ,8EAIvEC,KAAK,+FASd,GAFA9B,KAAK+B,WAAWC,UAAY,IAAUC,SAASR,GAE3CzB,KAAKsB,WAAWZ,OAAS,EAAG,CAC7B,MAAMwB,EAAWlC,KAAK+B,WAAWI,cAAc,YAC/CnC,KAAKsB,WAAWc,IAAI,CAACC,EAAOR,KACzB,GAAS,GAALA,EACD,OAAOK,EAASG,MAAQ,KAAKA,IAEhCH,EAASG,MAAQ,GAAGH,EAASG,YAAYA,KAE/C,OAEM,IAAIC,QAASC,GAAYC,WAAWD,EAAS,GACtD,CAEA,OAAAE,GACG,MAAMC,EAAQ,IAAIC,cAClBD,EAAME,YAAY,UAAOC,YACzB7C,KAAK+B,WAAWe,mBAAqB,CAACJ,EACzC,CAEA,kBAAAK,GAGA,CAEA,WAAAC,CAAYC,EAAOC,GACFA,aAAqB,KAGhCD,EAAME,iBACNnD,KAAKiD,SAELG,QAAQC,IAAI,WAElB,CAEA,KAAAJ,GACGG,QAAQC,IAAI,QACf,CAEA,uBAAMC,SACGtD,KAAKwB,SACXxB,KAAKyC,UACLzC,KAAK+C,oBACR,CAEA,wBAAAQ,CAAyBC,EAAMC,EAAUC,GACtC,GACQ,gBADDF,EACJ,CACG,MAAMjC,EAASlB,KAAKC,MAAMoD,GAAY,MACtC,IAAIxB,EACJA,EAAWlC,KAAK+B,WAAWI,cAAc,YACrCD,GACDX,EAAOa,IAAI,CAACC,EAAOR,KAChB,GAAS,GAALA,EACD,OAAO7B,KAAK+B,WAAWI,cAAc,YAAYE,MAAQ,KAAKA,IAEjErC,KAAK+B,WAAWI,cAAc,YAAYE,MAAQ,GAAGrC,KAAK+B,WAAWI,cAAc,YAAYE,YAAYA,KAI5G,CAEd,GAGH,QAAsB,kBAAmB1C,E","sources":["webpack://resume-builder/./src/components/customTextarea/customTextarea.js"],"sourcesContent":["import DOMPurify from \"dompurify\";\nimport Listener from \"../../js/listener.js\";\nimport { registerCustomElement } from \"../../js/registerComponent\";\nimport styles from \"./customTextarea.shadow.scss\";\n\nexport default class CustomTextarea extends HTMLElement {\n   static observedAttributes = [\"data-values\"];\n   constructor() {\n      super();\n      this.attachShadow({ mode: \"open\" });\n      this.listener;\n      this.dataID = JSON.parse(this.dataset.id || '[]');\n      this.inputCount = this.dataID.length || \"1\";\n      this.placeHolder = JSON.parse(this.dataset.placeholder || '[\"Enter text\"]');\n      this.title = this.getAttribute(\"title\") || [\"Custom Input\"];\n      this.dataAttr = JSON.parse(this.dataset.attr || \"{}\");\n      this.dataFormGroupItem = JSON.parse(this.dataset.formGroupItem || \"{}\");\n      this.dataClass = JSON.parse(this.dataset.class || \"{}\"); \n      this.dataTitle = JSON.parse(this.dataset.title || '[\"field\"]');\n      this.dataValues = JSON.parse(this.dataset.values || \"{}\");\n   }\n\n   async render() {\n      const dom = `\n         <div class=\"container\">\n            <div class=\"form-group\">\n            ${Array.from({length: this.inputCount}, (_, i) => {\n               return `\n               <div class=\"form-group-item ${this.dataFormGroupItem.length > 0 ? ` ${this.dataFormGroupItem[i]}` : \"\"}\">\n                  <slot name=\"label_${i}\"></slot>\n                  <textarea\n                     title=\"${this.dataTitle[i]}\"\n                     ${this.dataClass.length > 0 ? `class=\"${this.dataClass[i]}\"` : \"\"}\n                     ${this.dataID.length > 0 ? `id=\"${this.dataID[i]}\"` : \"\"}\n                     ${this.dataAttr.length > 0 ? `data-attr=\"${this.dataAttr[i]}\"` : \"\"}\n                  ></textarea>\n               </div>\n               `\n            }).join('')\n            }\n            </div>\n            <slot class=\"other\"></slot>\n         </div>\n         `;\n\n      this.shadowRoot.innerHTML = DOMPurify.sanitize(dom);\n\n      if (this.dataValues.length > 0) {\n         const textarea = this.shadowRoot.querySelector(\"textarea\");\n         this.dataValues.map((value, i) => {\n            if (i == 0) {\n               return textarea.value = `- ${value}`;\n            }\n            textarea.value = `${textarea.value}\\n- ${value}`;\n         })\n      }\n\n      await new Promise((resolve) => setTimeout(resolve, 0));\n   }\n\n   styling() {\n      const sheet = new CSSStyleSheet();\n      sheet.replaceSync(styles.toString());\n      this.shadowRoot.adoptedStyleSheets = [sheet];\n   }\n\n   setupEventListener() {\n      // this.listener = new Listener(this);\n      // this.addEventListener(\"click\", this.listener);\n   }\n\n   handleClick(event, delegated) {\n      const isDOM = delegated instanceof Listener;\n\n      if (isDOM) {\n         event.preventDefault();\n         this.event();\n      } else {\n         console.log(\"external\");\n      }\n   }\n\n   event() {\n      console.log('event');\n   }\n\n   async connectedCallback() {\n      await this.render();\n      this.styling();\n      this.setupEventListener();\n   }\n\n   attributeChangedCallback(name, oldValue, newValue) {\n      switch(name) {\n         case \"data-values\":\n            const values = JSON.parse(newValue || \"{}\");\n            let textarea;\n            textarea = this.shadowRoot.querySelector(\"textarea\");\n            if (textarea) {\n               values.map((value, i) => {\n                  if (i == 0) {\n                     return this.shadowRoot.querySelector(\"textarea\").value = `- ${value}`;\n                  }\n                  this.shadowRoot.querySelector(\"textarea\").value = `${this.shadowRoot.querySelector(\"textarea\").value}\\n- ${value}`;\n               })\n            }\n            \n            break;\n      }\n   }\n}\n\nregisterCustomElement(\"custom-textarea\", CustomTextarea);\n"],"names":["CustomTextarea","HTMLElement","static","constructor","super","this","attachShadow","mode","listener","dataID","JSON","parse","dataset","id","inputCount","length","placeHolder","placeholder","title","getAttribute","dataAttr","attr","dataFormGroupItem","formGroupItem","dataClass","class","dataTitle","dataValues","values","render","dom","Array","from","_","i","join","shadowRoot","innerHTML","sanitize","textarea","querySelector","map","value","Promise","resolve","setTimeout","styling","sheet","CSSStyleSheet","replaceSync","toString","adoptedStyleSheets","setupEventListener","handleClick","event","delegated","preventDefault","console","log","connectedCallback","attributeChangedCallback","name","oldValue","newValue"],"sourceRoot":""}