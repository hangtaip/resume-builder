"use strict";(self.webpackChunkresume_builder=self.webpackChunkresume_builder||[]).push([[8670,8701],{8670:(t,e,a)=>{a.r(e),a.d(e,{default:()=>l});var s=a(8404),i=a(2616),r=a(6854),n=a(8701),o=a(675);class l extends HTMLElement{static observedAttributes=["data-event","data-values"];constructor(){super(),this.attachShadow({mode:"open"}),this.listener,this.dataID=JSON.parse(this.dataset.id||"[]"),this.inputCount=this.dataID.length||"1",this.placeHolder=JSON.parse(this.dataset.placeholder||'["Enter text"]'),this.type=JSON.parse(this.dataset.inputType||"[]"),this.title=this.getAttribute("title")||["Custom Input"],this.dataAttr=JSON.parse(this.dataset.attr||"{}"),this.dataFormGroupItem=JSON.parse(this.dataset.formGroupItem||"{}"),this.dataClass=JSON.parse(this.dataset.class||"{}"),this.dataTitle=JSON.parse(this.dataset.title||"{}"),this.dataWidth=JSON.parse(this.dataset.width||"{}"),this.dataValues=JSON.parse(this.dataset.values||"{}"),this.dataEvent}async render(){const t=`\n         <div class="container">\n            <div class="form-group">\n            ${Array.from({length:this.inputCount},(t,e)=>`\n                <div class="form-group-item ${this.dataFormGroupItem.length>0?` ${this.dataFormGroupItem[e]}`:""}">\n                  <slot name="label_${e}"></slot>\n                  <input \n                     ${this.dataTitle.length>0?`title="${this.dataTitle[e]}"`:'title="field"'}\n                     ${0==this.type.length||this.type.length>0&&"text"==this.type[e]?`placeholder="${this.placeHolder[e]}"`:""}\n                     ${this.type.length>0?`type="${this.type[e]}"`:'type="text"'} \n                     ${this.dataClass.length>0?`class="${this.dataClass[e]}"`:""} \n                     ${this.dataID.length>0?`id="${this.dataID[e]}_${e}"`:""} \n                     ${this.dataAttr.length>0?`data-attr="${this.dataAttr[e]}"`:""}\n                     ${this.dataWidth.length>0?`data-width="${this.dataWidth[e]}"`:""}\n                  >\n                </div> \n               `).join("")}\n            </div>\n            <slot class="other"></slot>\n         </div>\n         `;this.shadowRoot.innerHTML=s.A.sanitize(t),Object.entries(this.dataValues).length>0&&this.shadowRoot.querySelectorAll("input").forEach(t=>{switch(t.type){case"text":t.value=this.dataValues[t.dataset.attr];break;case"color":const e=`#${this.dataValues[t.dataset.attr].toString().replace(/^#/,"")}`;t.value=e}}),await new Promise(t=>setTimeout(t,0))}styling(){const t=new CSSStyleSheet;t.replaceSync(n.default.toString()),this.shadowRoot.adoptedStyleSheets=[t]}setupEventListener(){this.listener=new i.A(this),Object.values(JSON.parse(this.dataEvent)).forEach(t=>{const e=new Function(`return ${t.target}`).bind(this)(),a=new Function(`return ${t.context}`).bind(this)();this.listener.setDelegates(e),a.addEventListener(t.event,this.listener),o.u.attachTo(t.event,t.name,this)})}handleClick(t,e){if(e instanceof i.A){let e=t.target.closest(".clickable");if(!e)return;if(!this.shadowRoot.contains(e))return;e.classList.contains("upload-btn")}else console.log("external")}getInputValue(){return this.shadowRoot.querySelector("input")?.value}async connectedCallback(){await this.render(),this.styling()}attributeChangedCallback(t,e,a){switch(t){case"data-event":this.dataEvent=a,this.setupEventListener();break;case"data-values":const t=JSON.parse(a||"{}");let e;Object.entries(t).forEach(t=>{if(e=this.shadowRoot.querySelector(`input[data-attr="${t[0]}"]`),e)switch(e.type){case"text":e.value=t[1];break;case"color":const a=`#${t[1].toString().replace(/^#/,"")}`;e.value=a}})}}}(0,r.Dp)("custom-input",l)},8701:(t,e,a)=>{a.r(e),a.d(e,{default:()=>s});const s='*,*::before,*::after{box-sizing:border-box;scrollbar-width:thin}button{background:#fff;color:hsl(0,0%,-4999999.999999999%);border-radius:.25rem;padding:.5rem;padding-inline:.5rem;border-width:0;transition:color .3s ease-out}button:hover{cursor:pointer;background:#d3d3d3;color:hsl(0,0%,-3274509.803921567%);border-radius:0;transition:.3s ease-in}input:not([type=text]){cursor:pointer}.icon{height:.7rem;width:.7rem}button:has(.icon){display:flex;border-width:0;border-radius:.5rem;padding:0}legend{font-size:2ch;font-weight:bold}.hidden{display:none}.container{height:auto;width:auto;background-color:rgba(0,0,0,0);font-family:"Georgia","serif";font-size:1.6ch;word-spacing:.8ch;display:flex;flex-flow:row nowrap;align-items:flex-start;gap:.25rem}.container input{flex:3 100%;padding:.25rem;border:1px solid hsl(240,54%,94%);border-radius:.25rem}.container input[type=color]{max-width:attr(data-width rem)}.container .form-group{display:flex;flex-flow:row wrap;flex:1;gap:.25rem}.container .form-group-item{display:flex;flex-flow:row wrap;flex:1}.container .form-group-item.flex-0{flex:0}'}}]);
//# sourceMappingURL=8670.07f4473e0c59548edc08.chunk.js.map